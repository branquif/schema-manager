-- CREATE TABLE
CREATE TABLE IMATDATA.B_SYS
(
  SYS_ID            VARCHAR2(12) NOT NULL,
  SYS_NM            VARCHAR2(60) NOT NULL,
  SYS_CMNT_DESC     VARCHAR2(4000),
  LAST_UPDT_DT      DATE DEFAULT CURRENT_DATE NOT NULL,
  LAST_UPDT_USER_NM VARCHAR2(60) NOT NULL
);

ALTER TABLE IMATDATA.B_SYS 
ADD CONSTRAINT B_SYS_PK PRIMARY KEY (SYS_ID);-- CREATE TABLE
CREATE TABLE IMATDATA.B_SYS_ATTRIB
(
  SYS_ID            VARCHAR2(12) NOT NULL,
  SYS_ATTRIB_NM     VARCHAR2(60) NOT NULL,
  SYS_ATTRIB_VAL    VARCHAR2(4000),
  LAST_UPDT_USER_NM VARCHAR2(60) NOT NULL,
  LAST_UPDT_DT      DATE DEFAULT CURRENT_DATE NOT NULL
);

ALTER TABLE IMATDATA.B_SYS_ATTRIB
  ADD CONSTRAINT B_SYS_ATTRIB_PK PRIMARY KEY (SYS_ID, SYS_ATTRIB_NM);
  
ALTER TABLE IMATDATA.B_SYS_ATTRIB
  ADD CONSTRAINT B_SYS_ATTRIB_B_SYS_FK FOREIGN KEY (SYS_ID)
  REFERENCES IMATDATA.B_SYS (SYS_ID) ON DELETE CASCADE;
-- CREATE TABLE
CREATE TABLE IMATDATA.B_SCHMA_TYPE
(
  SCHMA_TYPE_NM     VARCHAR2(30) NOT NULL,
  RDBMS_VER_DESC    VARCHAR2(30),
  RDBMS_CMNT_DESC   VARCHAR2(4000),
  LAST_UPDT_DT      DATE DEFAULT CURRENT_DATE NOT NULL,
  LAST_UPDT_USER_NM VARCHAR2(60) NOT NULL,
  SCHMA_TYPE_DESC   VARCHAR2(4000),
  SCHMA_TYPE_IND    VARCHAR2(10) NOT NULL
);

-- CREATE/RECREATE PRIMARY, UNIQUE AND FOREIGN KEY CONSTRAINTS 
ALTER TABLE IMATDATA.B_SCHMA_TYPE
  ADD CONSTRAINT B_SCHMA_TYPE_PK PRIMARY KEY (SCHMA_TYPE_NM);
  
-- CREATE/RECREATE CHECK CONSTRAINTS 
ALTER TABLE IMATDATA.B_SCHMA_TYPE
  ADD CONSTRAINT B_SCHMA_TYPE_SCHMA_IND_CK
  CHECK (SCHMA_TYPE_IND IN ('FLAT', 'XML', 'MAP'));

-- CREATE/RECREATE INDEXES 
CREATE INDEX IMATDATA.B_SCHMA_TYPE_INDEX1 ON IMATDATA.B_SCHMA_TYPE (SCHMA_TYPE_IND, SCHMA_TYPE_NM);  
  
  
-- CREATE TABLE
CREATE TABLE IMATDATA.B_DAT_TYPE
(
  SCHMA_TYPE_NM     VARCHAR2(30) NOT NULL,
  DAT_TYPE_NM       VARCHAR2(30) NOT NULL,
  LAST_UPDT_DT      DATE DEFAULT CURRENT_DATE NOT NULL,
  LAST_UPDT_USER_NM VARCHAR2(60) NOT NULL,
  DAT_TYPE_LENGTH   INTEGER
);

-- CREATE/RECREATE PRIMARY, UNIQUE AND FOREIGN KEY CONSTRAINTS 
ALTER TABLE IMATDATA.B_DAT_TYPE
  ADD CONSTRAINT B_DAT_TYPE_PK PRIMARY KEY (DAT_TYPE_NM, SCHMA_TYPE_NM);
  
-- CREATE/RECREATE PRIMARY, UNIQUE AND FOREIGN KEY CONSTRAINTS 
ALTER TABLE IMATDATA.B_DAT_TYPE
  ADD CONSTRAINT B_DAT_TYPE_B_SCHMA_TYPE_FK FOREIGN KEY (SCHMA_TYPE_NM)
  REFERENCES IMATDATA.B_SCHMA_TYPE (SCHMA_TYPE_NM) ON DELETE CASCADE;
-- CREATE TABLE
CREATE TABLE IMATDATA.B_SCHMA
(
  VER_ID            VARCHAR2(12) NOT NULL,
  SYS_ID            VARCHAR2(12) NOT NULL,
  LAST_VER_IND      VARCHAR2(1) NOT NULL,
  SCHMA_NM          VARCHAR2(255) NOT NULL,
  SCHMA_TYPE_NM     VARCHAR2(60) NOT NULL,
  SCHMA_CMNT_DESC   VARCHAR2(4000),
  LAST_UPDT_DT      DATE DEFAULT CURRENT_DATE NOT NULL,
  LAST_UPDT_USER_NM VARCHAR2(60) NOT NULL,
  OBJ_NUM_VER       INTEGER
);

-- CREATE/RECREATE PRIMARY, UNIQUE AND FOREIGN KEY CONSTRAINTS 
ALTER TABLE IMATDATA.B_SCHMA
  ADD CONSTRAINT B_SCHMA_PK PRIMARY KEY (SCHMA_NM, SYS_ID, VER_ID);
  
ALTER TABLE IMATDATA.B_SCHMA
  ADD CONSTRAINT B_SCHMAB_SYS_FK FOREIGN KEY (SYS_ID)
  REFERENCES IMATDATA.B_SYS (SYS_ID);
  
ALTER TABLE IMATDATA.B_SCHMA
  ADD CONSTRAINT B_SCHMA_B_SCHMA_TYPE_FK FOREIGN KEY (SCHMA_TYPE_NM)
  REFERENCES IMATDATA.B_SCHMA_TYPE (SCHMA_TYPE_NM);  
  
-- CREATE/RECREATE CHECK CONSTRAINTS 
ALTER TABLE IMATDATA.B_SCHMA
  ADD CONSTRAINT B_SCHMA_LAST_VER_IND_CK
  CHECK (LAST_VER_IND IN ('Y', 'N'));

  -- CREATE/RECREATE INDEXES 
CREATE INDEX IMATDATA.B_SCHMA_INDEX1 ON IMATDATA.B_SCHMA (SCHMA_NM, SYS_ID, LAST_VER_IND);

CREATE INDEX IMATDATA.B_SCHMA_INDEX2 ON IMATDATA.B_SCHMA (SYS_ID, LAST_VER_IND, SCHMA_TYPE_NM);
-- CREATE TABLE
CREATE TABLE IMATDATA.B_SCHMA_ATTRIB
(
  SYS_ID              VARCHAR2(12) NOT NULL,
  SCHMA_NM            VARCHAR2(255) NOT NULL,
  ATTRIB_NM           VARCHAR2(60) NOT NULL,
  ATTRIB_VAL          VARCHAR2(4000),
  ENT_ATTRIB_TYPE_IND VARCHAR2(10),
  LAST_UPDT_DT        DATE DEFAULT CURRENT_DATE NOT NULL,
  LAST_UPDT_USER_NM   VARCHAR2(60) NOT NULL,
  VER_ID              VARCHAR2(12) NOT NULL
);

-- CREATE/RECREATE PRIMARY, UNIQUE AND FOREIGN KEY CONSTRAINTS 
ALTER TABLE IMATDATA.B_SCHMA_ATTRIB
  ADD CONSTRAINT B_SCHMA_ATTRIB_PK PRIMARY KEY (SCHMA_NM, SYS_ID, VER_ID, ATTRIB_NM);
  
ALTER TABLE IMATDATA.B_SCHMA_ATTRIB
  ADD CONSTRAINT B_SCHMA_ATTRIBB_SCHMA_FK FOREIGN KEY (SCHMA_NM, SYS_ID, VER_ID)
  REFERENCES IMATDATA.B_SCHMA (SCHMA_NM, SYS_ID, VER_ID) ON DELETE CASCADE;
  
-- CREATE/RECREATE CHECK CONSTRAINTS 
ALTER TABLE IMATDATA.B_SCHMA_ATTRIB
  ADD CONSTRAINT B_SCHMA_ATTRIB_TYPE_IND_CK
  CHECK (ENT_ATTRIB_TYPE_IND IN ('ENTITY', 'FIELD', 'SCHEMA'));  
-- CREATE TABLE
CREATE TABLE IMATDATA.B_SCHMA_SRC
(
  SCHMA_NM      VARCHAR2(255) NOT NULL,
  SCHMA_TYPE_NM VARCHAR2(255) NOT NULL,
  SYS_ID        VARCHAR2(12) NOT NULL,
  USER_NM       VARCHAR2(255),
  PASSWD_VAL    VARCHAR2(255),
  DB_NM         VARCHAR2(255),
  URL_VAL       VARCHAR2(255),
  DIR_VAL       VARCHAR2(255),
  FL_NM         VARCHAR2(255)
);

-- CREATE/RECREATE PRIMARY, UNIQUE AND FOREIGN KEY CONSTRAINTS 
ALTER TABLE IMATDATA.B_SCHMA_SRC
  ADD CONSTRAINT B_SCHMA_SRC_PK PRIMARY KEY (SYS_ID, SCHMA_TYPE_NM, SCHMA_NM);
  
ALTER TABLE IMATDATA.B_SCHMA_SRC
  ADD CONSTRAINT B_SCHMA_SRCB_SCHMA_TYPE_FK FOREIGN KEY (SCHMA_TYPE_NM)
  REFERENCES IMATDATA.B_SCHMA_TYPE (SCHMA_TYPE_NM);  
-- CREATE TABLE
CREATE TABLE IMATDATA.B_ENT
(
  VER_ID            VARCHAR2(12) NOT NULL,
  SYS_ID            VARCHAR2(12) NOT NULL,
  SCHMA_NM          VARCHAR2(255) NOT NULL,
  ENT_NM            VARCHAR2(255) NOT NULL,
  ENT_CMNT_DESC     VARCHAR2(4000),
  LAST_UPDT_DT      DATE DEFAULT CURRENT_DATE NOT NULL,
  LAST_UPDT_USER_NM VARCHAR2(60) NOT NULL,
  PSTNL_FL_FLG      VARCHAR2(1),
  FL_HDR_FLG        VARCHAR2(1),
  ENT_ORD_NBR       NUMBER(8),
  OBJ_NUM_VER       INTEGER
);

-- CREATE/RECREATE PRIMARY, UNIQUE AND FOREIGN KEY CONSTRAINTS 
ALTER TABLE IMATDATA.B_ENT
  ADD CONSTRAINT B_ENT_PK PRIMARY KEY (SCHMA_NM, ENT_NM, SYS_ID, VER_ID);
  
ALTER TABLE IMATDATA.B_ENT
  ADD CONSTRAINT B_ENT_B_SCHMA_FK FOREIGN KEY (SCHMA_NM, SYS_ID, VER_ID)
  REFERENCES IMATDATA.B_SCHMA (SCHMA_NM, SYS_ID, VER_ID) ON DELETE CASCADE;

-- CREATE/RECREATE CHECK CONSTRAINTS 
ALTER TABLE IMATDATA.B_ENT
  ADD CONSTRAINT FL_HDR_FLG_CK
  CHECK (FL_HDR_FLG IN ('Y', 'N'));

ALTER TABLE IMATDATA.B_ENT
  ADD CONSTRAINT PSTNL_FL_FLG_CK
  CHECK (PSTNL_FL_FLG IN ('Y', 'N'));  
-- CREATE TABLE
CREATE TABLE IMATDATA.B_ENT_ATTRIB
(
  SYS_ID              VARCHAR2(12) NOT NULL,
  SCHMA_NM            VARCHAR2(255) NOT NULL,
  ENT_NM              VARCHAR2(255) NOT NULL,
  ATTRIB_NM           VARCHAR2(60) NOT NULL,
  ATTRIB_VAL          VARCHAR2(4000),
  ENT_ATTRIB_TYPE_IND VARCHAR2(10),
  LAST_UPDT_DT        DATE DEFAULT CURRENT_DATE NOT NULL,
  LAST_UPDT_USER_NM   VARCHAR2(60) NOT NULL,
  VER_ID              VARCHAR2(12) NOT NULL
);

-- CREATE/RECREATE PRIMARY, UNIQUE AND FOREIGN KEY CONSTRAINTS 
ALTER TABLE IMATDATA.B_ENT_ATTRIB
  ADD CONSTRAINT B_ENT_ATTRIB_PK PRIMARY KEY (SCHMA_NM, ENT_NM, SYS_ID, VER_ID, ATTRIB_NM);
  
ALTER TABLE IMATDATA.B_ENT_ATTRIB
  ADD CONSTRAINT B_ENT_ATTRIBB_ENT_FK FOREIGN KEY (SCHMA_NM, ENT_NM, SYS_ID, VER_ID)
  REFERENCES IMATDATA.B_ENT(SCHMA_NM, ENT_NM, SYS_ID, VER_ID) ON DELETE CASCADE;

  -- CREATE/RECREATE CHECK CONSTRAINTS 
ALTER TABLE IMATDATA.B_ENT_ATTRIB
  ADD CONSTRAINT ENT_ATTRIB_TYPE_IND_CK
  CHECK (ENT_ATTRIB_TYPE_IND IN ('ENTITY', 'FIELD', 'SCHEMA'));  
-- CREATE TABLE
CREATE TABLE IMATDATA.B_ENT_RELT
(
  SCHMA_NM          VARCHAR2(255) NOT NULL,
  ENT_NM            VARCHAR2(255) NOT NULL,
  SYS_ID            VARCHAR2(12) NOT NULL,
  VER_ID            VARCHAR2(12) NOT NULL,
  OBJ_NM            VARCHAR2(255) NOT NULL,
  PARNT_ENT_NM      VARCHAR2(255),
  LAST_UPDT_DT      DATE DEFAULT CURRENT_DATE NOT NULL,
  LAST_UPDT_USER_NM VARCHAR2(60) NOT NULL
);

-- CREATE/RECREATE PRIMARY, UNIQUE AND FOREIGN KEY CONSTRAINTS 
ALTER TABLE IMATDATA.B_ENT_RELT
  ADD CONSTRAINT B_ENT_HIE_PK PRIMARY KEY (SCHMA_NM, ENT_NM, SYS_ID, VER_ID, OBJ_NM)
  
ALTER TABLE IMATDATA.B_ENT_RELT
  ADD CONSTRAINT B_ENT_HIE_B_ENT_FK FOREIGN KEY (SCHMA_NM, ENT_NM, SYS_ID, VER_ID)
  REFERENCES IMATDATA.B_ENT (SCHMA_NM, ENT_NM, SYS_ID, VER_ID) ON DELETE CASCADE;  
-- CREATE TABLE
CREATE TABLE IMATDATA.B_FLD
(
  SCHMA_NM           VARCHAR2(255) NOT NULL,
  ENT_NM             VARCHAR2(255) NOT NULL,
  FLD_NM             VARCHAR2(255) NOT NULL,
  FLD_ORD_NBR        NUMBER(8),
  FLD_STRT_POSTN_NBR NUMBER(8),
  DAT_LEN_VAL        NUMBER(8),
  DAT_PREC_VAL       NUMBER(8),
  DAT_SCL_VAL        NUMBER(8),
  IS_NULL_FLG        VARCHAR2(1),
  IS_PK_FLG          VARCHAR2(1),
  DFT_VAL            VARCHAR2(4000),
  FLD_CMNT_DESC      VARCHAR2(4000),
  DAT_TYPE_NM        VARCHAR2(30),
  LAST_UPDT_USER_NM  VARCHAR2(60),
  LAST_UPDT_DT       DATE DEFAULT CURRENT_DATE,
  LOV_TYPE_NM        VARCHAR2(255),
  SYS_ID             VARCHAR2(12) NOT NULL,
  VER_ID             VARCHAR2(12) NOT NULL,
  SCHMA_TYPE_NM      VARCHAR2(255),
  OBJ_NUM_VER        INTEGER
);
  
-- CREATE/RECREATE PRIMARY, UNIQUE AND FOREIGN KEY CONSTRAINTS 
ALTER TABLE IMATDATA.B_FLD
  ADD CONSTRAINT B_FLD_PK PRIMARY KEY (SCHMA_NM, ENT_NM, SYS_ID, FLD_NM, VER_ID);
  
ALTER TABLE IMATDATA.B_FLD
  ADD CONSTRAINT B_FLD_B_DAT_TYPE_FK FOREIGN KEY (DAT_TYPE_NM, SCHMA_TYPE_NM)
  REFERENCES IMATDATA.B_DAT_TYPE (DAT_TYPE_NM, SCHMA_TYPE_NM);

ALTER TABLE IMATDATA.B_FLD
  ADD CONSTRAINT B_FLD_B_ENT_FK FOREIGN KEY (SCHMA_NM, ENT_NM, SYS_ID, VER_ID)
  REFERENCES IMATDATA.B_ENT (SCHMA_NM, ENT_NM, SYS_ID, VER_ID) ON DELETE CASCADE;

  -- CREATE/RECREATE CHECK CONSTRAINTS 
ALTER TABLE IMATDATA.B_FLD
  ADD CONSTRAINT IS_NULL_FLG_CK
  CHECK (IS_NULL_FLG IN ('Y','N'));
  
ALTER TABLE IMATDATA.B_FLD
  ADD CONSTRAINT IS_PK_FLG_CK
  CHECK (IS_PK_FLG IN ('Y', 'N'));
  
-- CREATE/RECREATE INDEXES 
CREATE INDEX IMATDATA.B_FLD_INDEX1 ON IMATDATA.B_FLD (FLD_NM);
-- CREATE TABLE
CREATE TABLE IMATDATA.B_FLD_ATTRIB
(
  SYS_ID              VARCHAR2(12) NOT NULL,
  SCHMA_NM            VARCHAR2(255) NOT NULL,
  ENT_NM              VARCHAR2(255) NOT NULL,
  FLD_NM              VARCHAR2(255) NOT NULL,
  ATTRIB_NM           VARCHAR2(60) NOT NULL,
  ATTRIB_VAL          VARCHAR2(4000),
  ENT_ATTRIB_TYPE_IND VARCHAR2(10),
  LAST_UPDT_DT        DATE DEFAULT CURRENT_DATE NOT NULL,
  LAST_UPDT_USER_NM   VARCHAR2(60) NOT NULL,
  VER_ID              VARCHAR2(12) NOT NULL
);

-- CREATE/RECREATE PRIMARY, UNIQUE AND FOREIGN KEY CONSTRAINTS 
ALTER TABLE IMATDATA.B_FLD_ATTRIB
  ADD CONSTRAINT B_FLD_ATTRIB_PK PRIMARY KEY (SCHMA_NM, ENT_NM, SYS_ID, FLD_NM, VER_ID, ATTRIB_NM);	
  
ALTER TABLE IMATDATA.B_FLD_ATTRIB
  ADD CONSTRAINT B_FLD_ATTRIB_B_FLD_FK FOREIGN KEY (SCHMA_NM, ENT_NM, SYS_ID, FLD_NM, VER_ID)
  REFERENCES IMATDATA.B_FLD (SCHMA_NM, ENT_NM, SYS_ID, FLD_NM, VER_ID) ON DELETE CASCADE;

-- CREATE/RECREATE CHECK CONSTRAINTS 
ALTER TABLE IMATDATA.B_FLD_ATTRIB
  ADD CONSTRAINT B_FLD_ATTRIB_TYPE_IND_CK
  CHECK (ENT_ATTRIB_TYPE_IND IN ('ENTITY', 'FIELD', 'SCHEMA'));  
-- CREATE TABLE
CREATE TABLE IMATDATA.B_XMLNS
(
  VER_ID            VARCHAR2(255) NOT NULL,
  SYS_ID            VARCHAR2(15) NOT NULL,
  XMLNS_NM          VARCHAR2(255) NOT NULL,
  LAST_UPDT_USER_NM VARCHAR2(60) NOT NULL,
  LAST_UPDT_DT      DATE DEFAULT CURRENT_DATE NOT NULL,
  SCHMA_NM          VARCHAR2(255) NOT NULL
);

-- CREATE/RECREATE PRIMARY, UNIQUE AND FOREIGN KEY CONSTRAINTS 
ALTER TABLE IMATDATA.B_XMLNS
  ADD CONSTRAINT B_XMLNS_PK PRIMARY KEY (SYS_ID, SCHMA_NM, XMLNS_NM, VER_ID);
  
ALTER TABLE IMATDATA.B_XMLNS
  ADD CONSTRAINT B_XMLNS_FK_SCHMA FOREIGN KEY (SCHMA_NM, SYS_ID, VER_ID)
  REFERENCES IMATDATA.B_SCHMA (SCHMA_NM, SYS_ID, VER_ID) ON DELETE CASCADE;  
-- Create table
create table IMATDATA.B_CPLX_TYPE
(
  SYS_ID            VARCHAR2(12) not null,
  VER_ID            VARCHAR2(12) not null,
  SCHMA_NM          VARCHAR2(255) not null,
  XMLNS_NM          VARCHAR2(255) not null,
  CPLX_TYPE_NM      VARCHAR2(255) not null,
  LAST_UPDT_DT      DATE default CURRENT_DATE not null,
  SRC_URI_NM        VARCHAR2(255),
  LAST_UPDT_USER_NM VARCHAR2(60) not null
);

-- Create/Recreate primary, unique and foreign key constraints 
alter table IMATDATA.B_CPLX_TYPE
  add constraint B_CPLX_TYPE_PK primary key (XMLNS_NM, CPLX_TYPE_NM, SYS_ID, VER_ID, SCHMA_NM);
  
alter table IMATDATA.B_CPLX_TYPE
  add constraint B_CPLX_TYPE_B_XMLNS_FK foreign key (SYS_ID, SCHMA_NM, XMLNS_NM, VER_ID)
  references IMATDATA.B_XMLNS (SYS_ID, SCHMA_NM, XMLNS_NM, VER_ID) on delete cascade;
  
-- CREATE TABLE
CREATE TABLE IMATDATA.B_CPLX_TYPE_ATTRIB
(
  CPLX_TYPE_ATTRIB_ID VARCHAR2(12) NOT NULL,
  XMLNS_NM            VARCHAR2(255) NOT NULL,
  CPLX_TYPE_NM        VARCHAR2(255) NOT NULL,
  SYS_ID              VARCHAR2(12) NOT NULL,
  VER_ID              VARCHAR2(12) NOT NULL,
  SCHMA_NM            VARCHAR2(255) NOT NULL,
  USE_NM              VARCHAR2(60),
  TYP_CD              VARCHAR2(255),
  DFT_VAL             VARCHAR2(255),
  FXD_VAL             VARCHAR2(255),
  ATTRIB_NM           VARCHAR2(60),
  REF_NM              VARCHAR2(60),
  ATTRIB_FORM         VARCHAR2(255),
  LAST_UPDT_DT        DATE,
  LAST_UPDT_USER_NM   VARCHAR2(60),
  SMPL_TYPE_NM        VARCHAR2(255),
  MIN_INCLSV_VAL      VARCHAR2(255),
  MAX_INCLSV_VAL      VARCHAR2(255),
  MIN_EXCLSV_VAL      VARCHAR2(255),
  MAX_EXCLSV_VAL      VARCHAR2(255),
  TOT_DIGTS_VAL       VARCHAR2(255),
  FRCTN_DIGTS_VAL     VARCHAR2(255),
  LEN_VAL             VARCHAR2(255),
  MIN_LEN_VAL         VARCHAR2(255),
  MAX_LEN_VAL         VARCHAR2(255),
  WTSPC_VAL           VARCHAR2(255),
  PTTRN_VAL           VARCHAR2(255),
  BASE_TYPE_NM        VARCHAR2(255)
);

-- CREATE/RECREATE PRIMARY, UNIQUE AND FOREIGN KEY CONSTRAINTS 
ALTER TABLE IMATDATA.B_CPLX_TYPE_ATTRIB
  ADD CONSTRAINT B_CPLX_TYPE_ATTRIB_PK PRIMARY KEY (XMLNS_NM, CPLX_TYPE_NM, SYS_ID, VER_ID, SCHMA_NM, CPLX_TYPE_ATTRIB_ID);
  
ALTER TABLE IMATDATA.B_CPLX_TYPE_ATTRIB
  ADD CONSTRAINT B_CPLX_TYPE_ATTR_B_CPLX_TY_FK FOREIGN KEY (XMLNS_NM, CPLX_TYPE_NM, SYS_ID, VER_ID, SCHMA_NM)
  REFERENCES IMATDATA.B_CPLX_TYPE (XMLNS_NM, CPLX_TYPE_NM, SYS_ID, VER_ID, SCHMA_NM) ON DELETE CASCADE;  
-- CREATE TABLE
CREATE TABLE IMATDATA.B_ELMNT
(
  VER_ID             VARCHAR2(12) NOT NULL,
  SYS_ID             VARCHAR2(12) NOT NULL,
  SCHMA_NM           VARCHAR2(255) NOT NULL,
  XMLNS_NM           VARCHAR2(255) NOT NULL,
  ELMNT_NM           VARCHAR2(255) NOT NULL,
  MIN_OCCUR_LMT      VARCHAR2(60),
  MAX_OCCUR_LMT      VARCHAR2(60),
  SEQ_NBR            NUMBER(7),
  DFT_VAL            VARCHAR2(255),
  FXD_VAL            VARCHAR2(255),
  IS_ROOT_FLG        VARCHAR2(1) NOT NULL,
  IS_LEAF_FLG        VARCHAR2(1) NOT NULL,
  TYPE_IND           VARCHAR2(255) NOT NULL,
  CMNT_DESC          CLOB,
  SMPL_TYPE_NM       VARCHAR2(255),
  BASE_TYPE_NM       VARCHAR2(255),
  CPLX_TYPE_NM       VARCHAR2(255),
  PARNT_SCHMA_NM     VARCHAR2(255),
  PARNT_CPLX_TYPE_NM VARCHAR2(255),
  PARNT_SYS_ID       VARCHAR2(12),
  PARNT_XMLNS_NM     VARCHAR2(255),
  SRC_URI_NM         VARCHAR2(255),
  MAX_EXCLSV_VAL     VARCHAR2(255),
  LEN_VAL            VARCHAR2(255),
  MIN_INCLSV_VAL     VARCHAR2(255),
  PTTRN_VAL          VARCHAR2(255),
  MIN_EXCLSV_VAL     VARCHAR2(255),
  FRCTN_DIGTS_VAL    VARCHAR2(255),
  WTSPC_VAL          VARCHAR2(255),
  TOT_DIGTS_VAL      VARCHAR2(255),
  MAX_LEN_VAL        VARCHAR2(255),
  MAX_INCLSV_VAL     VARCHAR2(255),
  MIN_LEN_VAL        VARCHAR2(255),
  LAST_UPDT_DT       DATE DEFAULT CURRENT_DATE NOT NULL,
  LAST_UPDT_USER_NM  VARCHAR2(60) NOT NULL,
  ELMNT_ID           VARCHAR2(12) NOT NULL,
  SCHMA_TYPE_NM      VARCHAR2(255),
  PARNT_ELMNT_NM     VARCHAR2(255)
);

-- CREATE/RECREATE PRIMARY, UNIQUE AND FOREIGN KEY CONSTRAINTS 
ALTER TABLE IMATDATA.B_ELMNT
  ADD CONSTRAINT B_ELMNT_PK PRIMARY KEY (ELMNT_NM, SYS_ID, XMLNS_NM, VER_ID, SCHMA_NM, ELMNT_ID);
  
ALTER TABLE IMATDATA.B_ELMNT
  ADD CONSTRAINT B_DAT_TYPE_FK FOREIGN KEY (BASE_TYPE_NM, SCHMA_TYPE_NM)
  REFERENCES IMATDATA.B_DAT_TYPE (DAT_TYPE_NM, SCHMA_TYPE_NM);
  
ALTER TABLE IMATDATA.B_ELMNT
  ADD CONSTRAINT B_ELEMNT_B_CPLX_TYPE_FK FOREIGN KEY (XMLNS_NM, CPLX_TYPE_NM, SYS_ID, VER_ID, SCHMA_NM)
  REFERENCES IMATDATA.B_CPLX_TYPE (XMLNS_NM, CPLX_TYPE_NM, SYS_ID, VER_ID, SCHMA_NM);
  
ALTER TABLE IMATDATA.B_ELMNT
  ADD CONSTRAINT B_ELEMNT_B_XMLNS_FK FOREIGN KEY (SYS_ID, SCHMA_NM, XMLNS_NM, VER_ID)
  REFERENCES IMATDATA.B_XMLNS (SYS_ID, SCHMA_NM, XMLNS_NM, VER_ID) ON DELETE CASCADE;
  
ALTER TABLE IMATDATA.B_ELMNT
  ADD CONSTRAINT B_ELMNT_PARENT_CT_FK FOREIGN KEY (PARNT_XMLNS_NM, PARNT_CPLX_TYPE_NM, PARNT_SYS_ID, VER_ID, PARNT_SCHMA_NM)
  REFERENCES IMATDATA.B_CPLX_TYPE (XMLNS_NM, CPLX_TYPE_NM, SYS_ID, VER_ID, SCHMA_NM);  
  
-- CREATE/RECREATE CHECK CONSTRAINTS 
ALTER TABLE IMATDATA.B_ELMNT
  ADD CONSTRAINT B_ELEMNT_TYPE_IND_CK
  CHECK (TYPE_IND IN ('SIMPLE_TYPE', 'COMPLEX_TYPE'));
  
ALTER TABLE IMATDATA.B_ELMNT
  ADD CONSTRAINT B_ELMNT_ROOT_CK
  CHECK (IS_ROOT_FLG IN ('Y', 'N'));
  
ALTER TABLE IMATDATA.B_ELMNT
  ADD CONSTRAINT IS_LEAF_FLG_CK
  CHECK (IS_LEAF_FLG IN ('Y', 'N'));  
  
  -- CREATE/RECREATE INDEXES 
CREATE INDEX IMATDATA.B_ELMNT$INDEX_SCHELM ON IMATDATA.B_ELMNT (SCHMA_NM, ELMNT_NM, IS_ROOT_FLG);

CREATE INDEX IMATDATA.B_ELMNT$INDEX_SCHELM_PAR ON IMATDATA.B_ELMNT (SCHMA_NM, PARNT_CPLX_TYPE_NM, IS_ROOT_FLG);
-- CREATE TABLE
CREATE TABLE IMATDATA.B_WS
(
  WSDL_NM             VARCHAR2(255) NOT NULL,
  WSDL_TARGT_NMSPC_NM VARCHAR2(255) NOT NULL,
  WSDL_BDY_DESC       CLOB,
  WSDL_FL_NM          VARCHAR2(255) NOT NULL,
  SERVCE_NM           VARCHAR2(255) NOT NULL,
  LAST_UPDT_USER_NM   VARCHAR2(60) NOT NULL,
  LAST_UPDT_DT        DATE DEFAULT CURRENT_DATE NOT NULL,
  SYS_ID              VARCHAR2(12) NOT NULL,
  VER_ID              VARCHAR2(12) NOT NULL,
  LAST_VER_IND        VARCHAR2(1) NOT NULL
);

-- CREATE/RECREATE PRIMARY, UNIQUE AND FOREIGN KEY CONSTRAINTS 
ALTER TABLE IMATDATA.B_WS
  ADD CONSTRAINT B_WS_PK PRIMARY KEY (SYS_ID, SERVCE_NM, VER_ID);
  
ALTER TABLE IMATDATA.B_WS
  ADD CONSTRAINT B_WSB_SYS_FK FOREIGN KEY (SYS_ID)
  REFERENCES IMATDATA.B_SYS (SYS_ID) ON DELETE CASCADE;
  
-- CREATE/RECREATE CHECK CONSTRAINTS 
ALTER TABLE IMATDATA.B_WS
  ADD CONSTRAINT B_WS_LASTVERIND_CK
  CHECK (LAST_VER_IND IN ('Y','N'));  
-- CREATE TABLE
CREATE TABLE IMATDATA.B_WS_OPER
(
  OPER_NM           VARCHAR2(255) NOT NULL,
  OPER_DESC         VARCHAR2(4000),
  SERVCE_NM         VARCHAR2(255) NOT NULL,
  PRT_NM            VARCHAR2(255) NOT NULL,
  LAST_UPDT_DT      DATE DEFAULT CURRENT_DATE NOT NULL,
  LAST_UPDT_USER_NM VARCHAR2(60) NOT NULL,
  SYS_ID            VARCHAR2(12) NOT NULL,
  VER_ID            VARCHAR2(12) NOT NULL
);

-- CREATE/RECREATE PRIMARY, UNIQUE AND FOREIGN KEY CONSTRAINTS 
ALTER TABLE IMATDATA.B_WS_OPER
  ADD CONSTRAINT B_WS_OPER_PK PRIMARY KEY (SERVCE_NM, OPER_NM, PRT_NM, VER_ID, SYS_ID);

ALTER TABLE IMATDATA.B_WS_OPER
  ADD CONSTRAINT B_WS_OPER_B_WS_FK FOREIGN KEY (SYS_ID, SERVCE_NM, VER_ID)
  REFERENCES IMATDATA.B_WS (SYS_ID, SERVCE_NM, VER_ID) ON DELETE CASCADE;
-- CREATE TABLE
CREATE TABLE IMATDATA.B_WS_MSG_PART
(
  SERVCE_NM         VARCHAR2(255) NOT NULL,
  OPER_NM           VARCHAR2(255) NOT NULL,
  MSG_NM            VARCHAR2(255) NOT NULL,
  PART_NM           VARCHAR2(255) NOT NULL,
  MSG_TYPE_IND      VARCHAR2(10) NOT NULL,
  TYPE_IND          VARCHAR2(10) NOT NULL,
  ELMNT_NM          VARCHAR2(255),
  BASE_TYPE_NM      VARCHAR2(30),
  XMLNS_NM          VARCHAR2(255),
  PRT_NM            VARCHAR2(255) NOT NULL,
  LAST_UPDT_DT      DATE DEFAULT CURRENT_DATE NOT NULL,
  LAST_UPDT_USER_NM VARCHAR2(60) NOT NULL,
  SYS_ID            VARCHAR2(12) NOT NULL,
  VER_ID            VARCHAR2(12) NOT NULL,
  SCHMA_NM          VARCHAR2(255),
  ELMNT_ID          VARCHAR2(12),
  SCHMA_TYPE_NM     VARCHAR2(30)
);

-- CREATE/RECREATE PRIMARY, UNIQUE AND FOREIGN KEY CONSTRAINTS 
ALTER TABLE IMATDATA.B_WS_MSG_PART
  ADD CONSTRAINT B_WS_MSG_PART_PK PRIMARY KEY (SYS_ID, SERVCE_NM, OPER_NM, PRT_NM, PART_NM, MSG_NM, VER_ID);

ALTER TABLE IMATDATA.B_WS_MSG_PART
  ADD CONSTRAINT B_WSDL_MESSAGE_B_WSDL_MSG_FK FOREIGN KEY (SERVCE_NM, OPER_NM, PRT_NM, VER_ID, SYS_ID)
  REFERENCES IMATDATA.B_WS_OPER (SERVCE_NM, OPER_NM, PRT_NM, VER_ID, SYS_ID) ON DELETE CASCADE;

ALTER TABLE IMATDATA.B_WS_MSG_PART
  ADD CONSTRAINT B_WSDL_MESSAGE_B_XSD_ELMNT_FK FOREIGN KEY (ELMNT_NM, SYS_ID, XMLNS_NM, VER_ID, SCHMA_NM, ELMNT_ID)
  REFERENCES IMATDATA.B_ELMNT (ELMNT_NM, SYS_ID, XMLNS_NM, VER_ID, SCHMA_NM, ELMNT_ID);

ALTER TABLE IMATDATA.B_WS_MSG_PART
  ADD CONSTRAINT B_WS_MSG_PART_B_DAT_TYPE_FK FOREIGN KEY (BASE_TYPE_NM, SCHMA_TYPE_NM)
  REFERENCES IMATDATA.B_DAT_TYPE (DAT_TYPE_NM, SCHMA_TYPE_NM);

-- CREATE/RECREATE CHECK CONSTRAINTS 
ALTER TABLE IMATDATA.B_WS_MSG_PART
  ADD CONSTRAINT B_WS_MSG_PART_TYPE_IND_CK
  CHECK (TYPE_IND IN ('BASE', 'ELEMENT'));
  
ALTER TABLE IMATDATA.B_WS_MSG_PART
  ADD CONSTRAINT MSG_TYPE_IND_CK
  CHECK (MSG_TYPE_IND IN ('IN', 'OUT', 'FAULT'));  
-- CREATE TABLE
CREATE TABLE IMATDATA.B_FLOW
(
  FLOW_ID           VARCHAR2(255) NOT NULL,
  CMNT_DESC         VARCHAR2(4000),
  BUSNS_PROC_NM     VARCHAR2(255),
  EXT_LINK_ID       VARCHAR2(255),
  DOC_URL_VAL       VARCHAR2(255),
  LAST_UPDT_DT      DATE DEFAULT CURRENT_DATE NOT NULL,
  LAST_UPDT_USER_NM VARCHAR2(60) NOT NULL,
  WORK_ID           NUMBER
);

-- CREATE/RECREATE PRIMARY, UNIQUE AND FOREIGN KEY CONSTRAINTS 
ALTER TABLE IMATDATA.B_FLOW
  ADD CONSTRAINT B_FLOW_PK PRIMARY KEY (FLOW_ID);


-- CREATE TABLE
CREATE TABLE IMATDATA.B_FLOW_ATTRIB
(
  FLOW_ID           VARCHAR2(255) NOT NULL,
  ATTRIB_NM         VARCHAR2(255) NOT NULL,
  ATTRIB_VAL        VARCHAR2(4000) NOT NULL,
  LAST_UPDT_USER_NM VARCHAR2(60) NOT NULL,
  LAST_UPDT_DT      DATE DEFAULT CURRENT_DATE NOT NULL
);

-- CREATE/RECREATE PRIMARY, UNIQUE AND FOREIGN KEY CONSTRAINTS 
ALTER TABLE IMATDATA.B_FLOW_ATTRIB
  ADD CONSTRAINT TABLE1_PK PRIMARY KEY (FLOW_ID, ATTRIB_NM)
  
ALTER TABLE IMATDATA.B_FLOW_ATTRIB
  ADD CONSTRAINT TABLE1_B_FLOW_FK FOREIGN KEY (FLOW_ID)
  REFERENCES IMATDATA.B_FLOW (FLOW_ID) ON DELETE CASCADE;  
  
-- CREATE TABLE
CREATE TABLE IMATDATA.B_FLOW_GRP
(
  FLOW_GRP_ID       VARCHAR2(12) NOT NULL,
  FLOW_GRP_NM       VARCHAR2(255) NOT NULL,
  CMNT_DESC         VARCHAR2(4000),
  DOC_URL_VAL       VARCHAR2(255),
  EXT_LINK_ID       VARCHAR2(255),
  LAST_UPDT_USER_NM VARCHAR2(60) NOT NULL,
  LAST_UPDT_DT      DATE DEFAULT CURRENT_DATE NOT NULL
);

-- CREATE/RECREATE PRIMARY, UNIQUE AND FOREIGN KEY CONSTRAINTS 
ALTER TABLE IMATDATA.B_FLOW_GRP
  ADD CONSTRAINT B_FLOW_GRP_PK PRIMARY KEY (FLOW_GRP_ID);

-- CREATE TABLE
CREATE TABLE IMATDATA.B_FLOW_GRP_ATTRIB
(
  FLOW_GRP_ID       VARCHAR2(12) NOT NULL,
  ATTRIB_NM         VARCHAR2(255) NOT NULL,
  ATTRIB_VAL        VARCHAR2(4000) NOT NULL,
  LAST_UPDT_USER_NM VARCHAR2(60) NOT NULL,
  LAST_UPDT_DT      DATE DEFAULT CURRENT_DATE NOT NULL
);

-- CREATE/RECREATE PRIMARY, UNIQUE AND FOREIGN KEY CONSTRAINTS 
ALTER TABLE IMATDATA.B_FLOW_GRP_ATTRIB
  ADD CONSTRAINT B_FLOW_GRP_ATTRIB_PK PRIMARY KEY (FLOW_GRP_ID, ATTRIB_NM);
  
ALTER TABLE IMATDATA.B_FLOW_GRP_ATTRIB
  ADD CONSTRAINT B_FLOW_GRP_ATTRI_B_FLOW_GR_FK FOREIGN KEY (FLOW_GRP_ID)
  REFERENCES IMATDATA.B_FLOW_GRP (FLOW_GRP_ID) ON DELETE CASCADE;  
-- CREATE TABLE
CREATE TABLE IMATDATA.B_FLOW_GRP_FLOW
(
  FLOW_GRP_ID VARCHAR2(12) NOT NULL,
  FLOW_ID     VARCHAR2(255) NOT NULL
);


-- CREATE/RECREATE PRIMARY, UNIQUE AND FOREIGN KEY CONSTRAINTS 
ALTER TABLE IMATDATA.B_FLOW_GRP_FLOW
  ADD CONSTRAINT B_FLOW_GRP_FLOW_PK PRIMARY KEY (FLOW_GRP_ID, FLOW_ID);
  
ALTER TABLE IMATDATA.B_FLOW_GRP_FLOW
  ADD CONSTRAINT B_FLOW_GRP_FLOW_B_FLOW_FK FOREIGN KEY (FLOW_ID)
  REFERENCES IMATDATA.B_FLOW (FLOW_ID) ON DELETE CASCADE;
  
ALTER TABLE IMATDATA.B_FLOW_GRP_FLOW
  ADD CONSTRAINT B_FLOW_GRP_FLOW_B_FLOW_GRP_FK FOREIGN KEY (FLOW_GRP_ID)
  REFERENCES IMATDATA.B_FLOW_GRP (FLOW_GRP_ID) ON DELETE CASCADE;  
-- CREATE TABLE
CREATE TABLE IMATDATA.B_FLOW_ERR_MESSAGE
(
  FLOW_ID           VARCHAR2(255),
  MESSAGE           VARCHAR2(255),
  LAST_UPDT_DT      DATE,
  LAST_UPDT_USER_NM VARCHAR2(60)
);



-- CREATE TABLE
CREATE TABLE IMATDATA.B_MAP
(
  VER_ID            VARCHAR2(12) NOT NULL,
  MAP_ID            VARCHAR2(255) NOT NULL,
  LAST_VER_IND      VARCHAR2(1) NOT NULL,
  MAP_CMNT_DESC     CLOB,
  MAP_TECHNLG_NM    VARCHAR2(60),
  DOC_URL_VAL       VARCHAR2(255),
  EXT_LINK_ID       VARCHAR2(255),
  AUTO_FLG          VARCHAR2(1) NOT NULL,
  LAST_UPDT_DT      DATE DEFAULT CURRENT_DATE NOT NULL,
  LAST_UPDT_USER_NM VARCHAR2(60) NOT NULL,
  MAP_TYPE_IND      VARCHAR2(10) NOT NULL,
  INT_MAP_TYPE_IND  VARCHAR2(20),
  TRANSFRM_RULE_TXT CLOB,
  ID                INTEGER
);

-- CREATE/RECREATE PRIMARY, UNIQUE AND FOREIGN KEY CONSTRAINTS 
ALTER TABLE IMATDATA.B_MAP
  ADD CONSTRAINT B_MAP_PK PRIMARY KEY (MAP_ID, VER_ID);
  
-- CREATE/RECREATE CHECK CONSTRAINTS 
ALTER TABLE IMATDATA.B_MAP
  ADD CONSTRAINT B_MAP_LAST_VER_IND_CK
  CHECK (LAST_VER_IND IN ('Y', 'N'));
  
ALTER TABLE IMATDATA.B_MAP
  ADD CONSTRAINT B_MAP_MAP_TYPE_IND_CK
  CHECK (MAP_TYPE_IND IN  ('EXT','INT'));  
  
-- CREATE/RECREATE INDEXES 
CREATE INDEX IMATDATA.B_MAP_INDEX2 ON IMATDATA.B_MAP (MAP_ID, LAST_VER_IND);

-- CREATE TABLE
CREATE TABLE IMATDATA.B_MAP_ATTRIB
(
  VER_ID            VARCHAR2(12) NOT NULL,
  MAP_ID            VARCHAR2(255) NOT NULL,
  ATTRIB_NM         VARCHAR2(255) NOT NULL,
  ATTRIB_VAL        VARCHAR2(4000) NOT NULL,
  LAST_UPDT_USER_NM VARCHAR2(60) NOT NULL,
  LAST_UPDT_DT      DATE DEFAULT CURRENT_DATE NOT NULL
);

-- CREATE/RECREATE PRIMARY, UNIQUE AND FOREIGN KEY CONSTRAINTS 
ALTER TABLE IMATDATA.B_MAP_ATTRIB
  ADD CONSTRAINT B_MAP_ATTRIB_PK PRIMARY KEY (MAP_ID, VER_ID, ATTRIB_NM);
  
ALTER TABLE IMATDATA.B_MAP_ATTRIB
  ADD CONSTRAINT B_MAP_ATTRIB_B_MAP_FK FOREIGN KEY (MAP_ID, VER_ID)
  REFERENCES IMATDATA.B_MAP (MAP_ID, VER_ID) ON DELETE CASCADE;  
-- CREATE TABLE
CREATE TABLE IMATDATA.B_MAP_DST
(
  VER_ID            VARCHAR2(12) NOT NULL,
  MAP_ID            VARCHAR2(255) NOT NULL,
  SYS_ID            VARCHAR2(12) NOT NULL,
  SCHMA_NM          VARCHAR2(255) NOT NULL,
  ENT_NM            VARCHAR2(255) NOT NULL,
  EXT_LINK_ID       VARCHAR2(255),
  LAST_UPDT_DT      DATE DEFAULT CURRENT_DATE NOT NULL,
  LAST_UPDT_USER_NM VARCHAR2(60) NOT NULL
);

-- CREATE/RECREATE PRIMARY, UNIQUE AND FOREIGN KEY CONSTRAINTS 
ALTER TABLE IMATDATA.B_MAP_DST
  ADD CONSTRAINT B_MAP_DST_PK PRIMARY KEY (MAP_ID, SCHMA_NM, ENT_NM, SYS_ID, VER_ID);
  
ALTER TABLE IMATDATA.B_MAP_DST
  ADD CONSTRAINT B_MAP_DST_B_MAP_FK FOREIGN KEY (MAP_ID, VER_ID)
  REFERENCES IMATDATA.B_MAP (MAP_ID, VER_ID) ON DELETE CASCADE;  
-- CREATE TABLE
CREATE TABLE IMATDATA.B_MAP_SRC
(
  VER_ID            VARCHAR2(12) NOT NULL,
  MAP_ID            VARCHAR2(255) NOT NULL,
  SYS_ID            VARCHAR2(12) NOT NULL,
  SCHMA_NM          VARCHAR2(255) NOT NULL,
  ENT_NM            VARCHAR2(255) NOT NULL,
  EXT_LINK_ID       VARCHAR2(255),
  LAST_UPDT_DT      DATE DEFAULT CURRENT_DATE NOT NULL,
  LAST_UPDT_USER_NM VARCHAR2(60) NOT NULL,
  ALIAS_NM          VARCHAR2(255) NOT NULL
);

-- CREATE/RECREATE PRIMARY, UNIQUE AND FOREIGN KEY CONSTRAINTS 
ALTER TABLE IMATDATA.B_MAP_SRC
  ADD CONSTRAINT B_MAP_SRC_PK PRIMARY KEY (MAP_ID, SCHMA_NM, ENT_NM, SYS_ID, VER_ID, ALIAS_NM);

ALTER TABLE IMATDATA.B_MAP_SRC
  ADD CONSTRAINT B_MAP_SRC_B_MAP_FK FOREIGN KEY (MAP_ID, VER_ID)
  REFERENCES IMATDATA.B_MAP (MAP_ID, VER_ID) ON DELETE CASCADE;  
-- CREATE TABLE
CREATE TABLE IMATDATA.B_SRC_JOIN
(
  VER_ID            VARCHAR2(12) NOT NULL,
  MAP_ID            VARCHAR2(255) NOT NULL,
  JOIN_NM           VARCHAR2(255) NOT NULL,
  SYS_ID            VARCHAR2(12) NOT NULL,
  SCHMA_NM          VARCHAR2(255) NOT NULL,
  ENT_NM            VARCHAR2(255) NOT NULL,
  FLD_NM            VARCHAR2(255) NOT NULL,
  RGHT_SYS_ID       VARCHAR2(12),
  RGHT_SCHMA_NM     VARCHAR2(255),
  RGHT_ENT_NM       VARCHAR2(255),
  RGHT_FLD_NM       VARCHAR2(255),
  CMPRSN_VAL        VARCHAR2(255),
  CNSTRNT_VAL       VARCHAR2(4000),
  JOIN_CNSTRNT_IND  VARCHAR2(1) NOT NULL,
  OUTER_JOIN_FLG    VARCHAR2(1) NOT NULL,
  LAST_UPDT_USER_NM VARCHAR2(60) NOT NULL,
  LAST_UPDT_DT      DATE DEFAULT CURRENT_DATE NOT NULL,
  ALIAS_NM          VARCHAR2(255)
);

-- CREATE/RECREATE PRIMARY, UNIQUE AND FOREIGN KEY CONSTRAINTS 
ALTER TABLE IMATDATA.B_SRC_JOIN
  ADD CONSTRAINT B_SRC_JOIN_LEFT_SRC_FK FOREIGN KEY (MAP_ID, SCHMA_NM, ENT_NM, SYS_ID, VER_ID, ALIAS_NM)
  REFERENCES IMATDATA.B_MAP_SRC (MAP_ID, SCHMA_NM, ENT_NM, SYS_ID, VER_ID, ALIAS_NM) ON DELETE CASCADE
  DISABLE;
  
ALTER TABLE IMATDATA.B_SRC_JOIN
  ADD CONSTRAINT B_SRC_JOIN_RGHT_SRC_FK FOREIGN KEY (MAP_ID, RGHT_SCHMA_NM, RGHT_ENT_NM, RGHT_SYS_ID, VER_ID, ALIAS_NM)
  REFERENCES IMATDATA.B_MAP_SRC (MAP_ID, SCHMA_NM, ENT_NM, SYS_ID, VER_ID, ALIAS_NM)
  DISABLE;
  
-- CREATE/RECREATE CHECK CONSTRAINTS 
ALTER TABLE IMATDATA.B_SRC_JOIN
  ADD CONSTRAINT JOIN_CNSTRNT_IND_CK
  CHECK (JOIN_CNSTRNT_IND IN ('J', 'C'));
  
-- CREATE TABLE
CREATE TABLE IMATDATA.B_TRANSFRM_FLD
(
  MAP_ID            VARCHAR2(255) NOT NULL,
  VER_ID            VARCHAR2(12) NOT NULL,
  SYS_ID            VARCHAR2(12) NOT NULL,
  SCHMA_NM          VARCHAR2(255) NOT NULL,
  ENT_NM            VARCHAR2(255) NOT NULL,
  FLD_NM            VARCHAR2(255) NOT NULL,
  TRANSFRM_RULE_TXT VARCHAR2(4000),
  TRANSFRM_TYPE_IND VARCHAR2(10) NOT NULL,
  CMNT_DESC         CLOB,
  EXT_LINK_ID       VARCHAR2(255),
  LAST_UPDT_DT      DATE DEFAULT CURRENT_DATE NOT NULL,
  LAST_UPDT_USER_NM VARCHAR2(60) NOT NULL
);

-- CREATE/RECREATE PRIMARY, UNIQUE AND FOREIGN KEY CONSTRAINTS 
ALTER TABLE IMATDATA.B_TRANSFRM_FLD
  ADD CONSTRAINT B_TRANSFRM_FLD_PK PRIMARY KEY (MAP_ID, VER_ID, SCHMA_NM, ENT_NM, SYS_ID, FLD_NM);
  
ALTER TABLE IMATDATA.B_TRANSFRM_FLD
  ADD CONSTRAINT B_TRANSFRM_FLD_B_MAP_DST_FK FOREIGN KEY (MAP_ID, SCHMA_NM, ENT_NM, SYS_ID, VER_ID)
  REFERENCES IMATDATA.B_MAP_DST (MAP_ID, SCHMA_NM, ENT_NM, SYS_ID, VER_ID) ON DELETE CASCADE;
  
ALTER TABLE IMATDATA.B_TRANSFRM_FLD
  ADD CONSTRAINT B_TRANSF_FIELD_B_MAP_FK FOREIGN KEY (MAP_ID, VER_ID)
  REFERENCES IMATDATA.B_MAP (MAP_ID, VER_ID) ON DELETE CASCADE;  
  
-- CREATE/RECREATE CHECK CONSTRAINTS 
ALTER TABLE IMATDATA.B_TRANSFRM_FLD
  ADD CONSTRAINT TRANSFRM_TYPE_IND_CK
  CHECK (TRANSFRM_TYPE_IND IN ('FORWARD', 'LOOKUP', 'FORMULA', 'CONSTANT','DIRECT','MASTER','ROUTINE','TIME'));

-- CREATE/RECREATE INDEXES 
CREATE INDEX IMATDATA.B_TRASFRM_MAP_INDEX ON IMATDATA.B_TRANSFRM_FLD (MAP_ID, VER_ID);  
-- CREATE TABLE
CREATE TABLE IMATDATA.B_TRANSFRM_ATTRIB
(
  VER_ID            VARCHAR2(12) NOT NULL,
  MAP_ID            VARCHAR2(255) NOT NULL,
  SYS_ID            VARCHAR2(12) NOT NULL,
  SCHMA_NM          VARCHAR2(255) NOT NULL,
  ENT_NM            VARCHAR2(255) NOT NULL,
  FLD_NM            VARCHAR2(255) NOT NULL,
  ATTRIB_NM         VARCHAR2(255) NOT NULL,
  ATTRIB_VAL        VARCHAR2(4000),
  LAST_UPDT_DT      DATE DEFAULT CURRENT_DATE NOT NULL,
  LAST_UPDT_USER_NM VARCHAR2(60) NOT NULL
);

-- CREATE/RECREATE PRIMARY, UNIQUE AND FOREIGN KEY CONSTRAINTS 
ALTER TABLE IMATDATA.B_TRANSFRM_ATTRIB
  ADD CONSTRAINT B_TRANSFRM_ATTRIB_PK PRIMARY KEY (VER_ID, SCHMA_NM, ENT_NM, SYS_ID, FLD_NM, ATTRIB_NM, MAP_ID);
  
ALTER TABLE IMATDATA.B_TRANSFRM_ATTRIB
  ADD CONSTRAINT B_TRANSFRM_ATTRB_TRANSFRM_F_FK FOREIGN KEY (MAP_ID, VER_ID, SCHMA_NM, ENT_NM, SYS_ID, FLD_NM)
  REFERENCES IMATDATA.B_TRANSFRM_FLD (MAP_ID, VER_ID, SCHMA_NM, ENT_NM, SYS_ID, FLD_NM) ON DELETE CASCADE;  
-- CREATE TABLE
CREATE TABLE IMATDATA.B_TRANSFRM_FLD_SRC
(
  VER_ID            VARCHAR2(12) NOT NULL,
  MAP_ID            VARCHAR2(255) NOT NULL,
  SYS_ID            VARCHAR2(12) NOT NULL,
  SCHMA_NM          VARCHAR2(255) NOT NULL,
  ENT_NM            VARCHAR2(255) NOT NULL,
  FLD_NM            VARCHAR2(255) NOT NULL,
  SRC_SYS_ID        VARCHAR2(12) NOT NULL,
  SRC_SCHMA_NM      VARCHAR2(255) NOT NULL,
  SRC_ENT_NM        VARCHAR2(255) NOT NULL,
  SRC_FLD_NM        VARCHAR2(255) NOT NULL,
  EXT_LINK_ID       VARCHAR2(255),
  LAST_UPDT_DT      DATE DEFAULT CURRENT_DATE NOT NULL,
  LAST_UPDT_USER_NM VARCHAR2(60) NOT NULL,
  ALIAS_NM          VARCHAR2(255) NOT NULL
);

-- CREATE/RECREATE PRIMARY, UNIQUE AND FOREIGN KEY CONSTRAINTS 
ALTER TABLE IMATDATA.B_TRANSFRM_FLD_SRC
  ADD CONSTRAINT B_TRANSFRM_FLD_SRC_PK PRIMARY KEY (VER_ID, SCHMA_NM, ENT_NM, SYS_ID, FLD_NM, SRC_SYS_ID, SRC_SCHMA_NM, SRC_ENT_NM, ALIAS_NM, SRC_FLD_NM, MAP_ID);
  
ALTER TABLE IMATDATA.B_TRANSFRM_FLD_SRC
  ADD CONSTRAINT B_TRANSFRM_FLD_SR_B_MAP_EN_FK FOREIGN KEY (MAP_ID, SRC_SCHMA_NM, SRC_ENT_NM, SRC_SYS_ID, VER_ID, ALIAS_NM)
  REFERENCES IMATDATA.B_MAP_SRC (MAP_ID, SCHMA_NM, ENT_NM, SYS_ID, VER_ID, ALIAS_NM) ON DELETE CASCADE;

ALTER TABLE IMATDATA.B_TRANSFRM_FLD_SRC
  ADD CONSTRAINT B_TRFRM_FLD_B_TRFRM_SRC_FK FOREIGN KEY (MAP_ID, VER_ID, SCHMA_NM, ENT_NM, SYS_ID, FLD_NM)
  REFERENCES IMATDATA.B_TRANSFRM_FLD (MAP_ID, VER_ID, SCHMA_NM, ENT_NM, SYS_ID, FLD_NM) ON DELETE CASCADE;  
  
-- CREATE/RECREATE INDEXES 
CREATE INDEX IMATDATA.B_TRANSFRM_FLD_SRC_INDEX1 ON IMATDATA.B_TRANSFRM_FLD_SRC (MAP_ID, VER_ID);
CREATE INDEX IMATDATA.B_TRANSFRM_FLD_SRC_INDEX2 ON IMATDATA.B_TRANSFRM_FLD_SRC (SRC_ENT_NM, SRC_FLD_NM);
CREATE INDEX IMATDATA.B_TRANSFRM_FLD_SRC_INDEX3 ON IMATDATA.B_TRANSFRM_FLD_SRC (FLD_NM, ENT_NM);
CREATE INDEX IMATDATA.B_TRANSFRM_FLD_SRC_INDEX4 ON IMATDATA.B_TRANSFRM_FLD_SRC (ENT_NM);  
-- CREATE TABLE
CREATE TABLE IMATDATA.B_REGN
(
  REGN_ID VARCHAR2(12) NOT NULL,
  REGN_NM VARCHAR2(60)
);

-- CREATE/RECREATE PRIMARY, UNIQUE AND FOREIGN KEY CONSTRAINTS 
ALTER TABLE IMATDATA.B_REGN
  ADD CONSTRAINT B_REGN_PK PRIMARY KEY (REGN_ID);
-- Create table
create table IMATDATA.B_FLOW_MAP
(
  FLOW_ID           VARCHAR2(255) not null,
  MAP_ID            VARCHAR2(255) not null,
  LAST_UPDT_DT      DATE default CURRENT_DATE not null,
  LAST_UPDT_USER_NM VARCHAR2(60) not null,
  ORD_VAL           NUMBER(8) not null,
  REGN_ID           VARCHAR2(12) not null,
  VER_ID            VARCHAR2(12),
  LAST_VER_IND      VARCHAR2(12)
);

-- Create/Recreate primary, unique and foreign key constraints 
alter table IMATDATA.B_FLOW_MAP
  add constraint B_FLOW_MAP_PK primary key (FLOW_ID, MAP_ID);
  
alter table IMATDATA.B_FLOW_MAP
  add constraint B_FLOW_MAP_B_FLOW_FK foreign key (FLOW_ID)
  references IMATDATA.B_FLOW (FLOW_ID) on delete cascade;
  
alter table IMATDATA.B_FLOW_MAP
  add constraint B_FLOW_MAP_B_REGN_FK foreign key (REGN_ID)
  references IMATDATA.B_REGN (REGN_ID) on delete cascade;  
  
-- Create/Recreate indexes 
create index IMATDATA.B_FLOW_MAP_INDEX1 on IMATDATA.B_FLOW_MAP (REGN_ID, FLOW_ID);
create index IMATDATA.B_FLOW_MAP_INDEX2 on IMATDATA.B_FLOW_MAP (MAP_ID);
create index IMATDATA.B_FLOW_MAP_INDEX3 on IMATDATA.B_FLOW_MAP (REGN_ID, MAP_ID); 
-- CREATE TABLE
CREATE TABLE IMATDATA.B_LNG
(
  LNG_CD   VARCHAR2(12) NOT NULL,
  LNG_DESC VARCHAR2(4000) NOT NULL
);

-- CREATE/RECREATE PRIMARY, UNIQUE AND FOREIGN KEY CONSTRAINTS 
ALTER TABLE IMATDATA.B_LNG
  ADD CONSTRAINT B_LNG_PK PRIMARY KEY (LNG_CD);
  
ALTER TABLE IMATDATA.B_LNG
  ADD CONSTRAINT B_LNG_UNIQUE UNIQUE (LNG_DESC);
  
-- CREATE TABLE
CREATE TABLE IMATDATA.B_VERSION
(
  VERSION           VARCHAR2(50),
  LAST_UPDT_DT      DATE,
  LAST_UPDT_USER_NM VARCHAR2(50),
  LAST_VER_IND      VARCHAR2(1)
);

-- CREATE TABLE
CREATE TABLE IMATDATA.B_LOGIN
(
  USERNAME    VARCHAR2(50) NOT NULL,
  PASSWORD    VARCHAR2(255),
  ADMPASSWORD VARCHAR2(255)
);

-- CREATE/RECREATE PRIMARY, UNIQUE AND FOREIGN KEY CONSTRAINTS 
ALTER TABLE IMATDATA.B_LOGIN
  ADD PRIMARY KEY (USERNAME);-- CREATE TABLE
CREATE TABLE IMATDATA.B_SALES_ORG
(
  SALES_ORG_ID      VARCHAR2(255) NOT NULL,
  SALES_ORG_NM      VARCHAR2(255),
  LAST_UPDT_USER_NM VARCHAR2(60) NOT NULL,
  LAST_UPDT_DT      DATE DEFAULT CURRENT_DATE NOT NULL
);

-- CREATE/RECREATE PRIMARY, UNIQUE AND FOREIGN KEY CONSTRAINTS 
ALTER TABLE IMATDATA.B_SALES_ORG
  ADD CONSTRAINT B_SALE_ORG_PK PRIMARY KEY (SALES_ORG_ID);
-- CREATE TABLE
CREATE TABLE IMATDATA.WORK_STATUS
(
  WORK_ID NUMBER NOT NULL,
  STATUS  VARCHAR2(20)
);


-- CREATE TABLE
CREATE TABLE IMATDATA.B_LOOKUP
(
  LOOKUP_ID         VARCHAR2(50) NOT NULL,
  LOOKUP_NM         VARCHAR2(50),
  LOOKUP_DESC       VARCHAR2(255),
  LAST_UPDT_USER_NM VARCHAR2(10) NOT NULL,
  LAST_UPDT_DT      DATE NOT NULL,
  VER_ID            VARCHAR2(12) NOT NULL,
  LAST_VER_IND      VARCHAR2(1) NOT NULL
);

-- CREATE/RECREATE PRIMARY, UNIQUE AND FOREIGN KEY CONSTRAINTS 
ALTER TABLE IMATDATA.B_LOOKUP
  ADD CONSTRAINT B_LKP_PK PRIMARY KEY (LOOKUP_ID, VER_ID);
  
-- CREATE TABLE
CREATE TABLE IMATDATA.B_LOOKUP_VAL
(
  LOOKUP_ID         VARCHAR2(50) NOT NULL,
  FROM_VAL          VARCHAR2(100),
  TO_VAL            VARCHAR2(100),
  LOOKUP_VAL_DESC   VARCHAR2(255),
  LAST_UPDT_USER_NM VARCHAR2(10) NOT NULL,
  LAST_UPDT_DT      DATE NOT NULL,
  VER_ID            VARCHAR2(12) NOT NULL
);

-- CREATE/RECREATE PRIMARY, UNIQUE AND FOREIGN KEY CONSTRAINTS 
ALTER TABLE IMATDATA.B_LOOKUP_VAL
  ADD CONSTRAINT B_LKP_FK FOREIGN KEY (LOOKUP_ID, VER_ID)
  REFERENCES IMATDATA.B_LOOKUP (LOOKUP_ID, VER_ID) ON DELETE CASCADE;
-- CREATE TABLE
CREATE TABLE IMATDATA.B_NAME_STANDARD_RULE
(
  NAME_STANDARD_RULE_ID VARCHAR2(50) NOT NULL,
  DESCRIPTION           VARCHAR2(500),
  DOC_URL               VARCHAR2(255),
  EXT_LINK              VARCHAR2(255),
  SEPARATOR             VARCHAR2(255),
  REG_EXP               VARCHAR2(255),
  LAST_UPDT_USER_NM     VARCHAR2(60),
  LAST_UPDT_DT          DATE DEFAULT CURRENT_DATE,
  MAX_CHAR              NUMBER(8),
  MIN_CHAR              NUMBER(8),
  USE_SEPARATOR         VARCHAR2(3)
);

-- CREATE/RECREATE PRIMARY, UNIQUE AND FOREIGN KEY CONSTRAINTS 
ALTER TABLE IMATDATA.B_NAME_STANDARD_RULE
  ADD CONSTRAINT B_NAME_STANDARD_RULE_PK PRIMARY KEY (NAME_STANDARD_RULE_ID);
-- CREATE TABLE
CREATE TABLE IMATDATA.B_CLASS_WORD_LIST
(
  CLASS_WORD_LIST_ID VARCHAR2(50) NOT NULL,
  EXT_LINK           VARCHAR2(255),
  DESCRIPTION        VARCHAR2(500),
  DOC_URL            VARCHAR2(255),
  LAST_UPDT_DT       DATE DEFAULT CURRENT_DATE,
  LAST_UPDT_USER_NM  VARCHAR2(60),
  SCHMA_TYPE_NM      VARCHAR2(30)
);

-- CREATE/RECREATE PRIMARY, UNIQUE AND FOREIGN KEY CONSTRAINTS 
ALTER TABLE IMATDATA.B_CLASS_WORD_LIST
  ADD CONSTRAINT B_CLASS_WORD_LIST_PK PRIMARY KEY (CLASS_WORD_LIST_ID);
  
ALTER TABLE IMATDATA.B_CLASS_WORD_LIST
  ADD CONSTRAINT B_CLASS_WORD_LIST_FK FOREIGN KEY (SCHMA_TYPE_NM)
  REFERENCES IMATDATA.B_SCHMA_TYPE (SCHMA_TYPE_NM);  
-- Create table
create table IMATDATA.B_CLASS_WORD
(
  CLASS_WORD_LIST_ID VARCHAR2(50) not null,
  WORD               VARCHAR2(100) not null,
  DESCRIPTION        VARCHAR2(255),
  ABBREVIATION       VARCHAR2(50) not null,
  DATA_TYPE          VARCHAR2(50),
  SCHMA_TYPE_NM      VARCHAR2(30)
);

-- Create/Recreate primary, unique and foreign key constraints 
alter table IMATDATA.B_CLASS_WORD
  add constraint B_CLASS_WORD_PK primary key (CLASS_WORD_LIST_ID, WORD);
  
alter table IMATDATA.B_CLASS_WORD
  add constraint B_CLASS_WORD_FK foreign key (CLASS_WORD_LIST_ID)
  references IMATDATA.B_CLASS_WORD_LIST (CLASS_WORD_LIST_ID) on delete cascade;

alter table IMATDATA.B_CLASS_WORD
  add constraint B_CLASS_WORD_FK2 foreign key (DATA_TYPE, SCHMA_TYPE_NM)
  references IMATDATA.B_DAT_TYPE (DAT_TYPE_NM, SCHMA_TYPE_NM);  
-- CREATE TABLE
CREATE TABLE IMATDATA.B_PRIME_WORD_LIST
(
  PRIME_WORD_LIST_ID VARCHAR2(50) NOT NULL,
  DESCRIPTION        VARCHAR2(500),
  DOC_URL            VARCHAR2(255),
  EXT_LINK           VARCHAR2(255),
  LAST_UPDT_USER_NM  VARCHAR2(60),
  LAST_UPDT_DT       DATE DEFAULT CURRENT_DATE
);

-- CREATE/RECREATE PRIMARY, UNIQUE AND FOREIGN KEY CONSTRAINTS 
ALTER TABLE IMATDATA.B_PRIME_WORD_LIST
  ADD CONSTRAINT B_PRIME_WORD_LIST_PK PRIMARY KEY (PRIME_WORD_LIST_ID);
    
-- CREATE TABLE
CREATE TABLE IMATDATA.B_PRIME_WORD
(
  PRIME_WORD_LIST_ID VARCHAR2(50) NOT NULL,
  ABBREVIATION       VARCHAR2(50) NOT NULL,
  WORD               VARCHAR2(100) NOT NULL,
  DESCRIPTION        VARCHAR2(255)
);

-- CREATE/RECREATE PRIMARY, UNIQUE AND FOREIGN KEY CONSTRAINTS 
ALTER TABLE IMATDATA.B_PRIME_WORD
  ADD CONSTRAINT B_PRIME_WORD_PK PRIMARY KEY (PRIME_WORD_LIST_ID, WORD);
  
ALTER TABLE IMATDATA.B_PRIME_WORD
  ADD CONSTRAINT B_PRIME_WORD_FK FOREIGN KEY (PRIME_WORD_LIST_ID)
  REFERENCES IMATDATA.B_PRIME_WORD_LIST (PRIME_WORD_LIST_ID) ON DELETE CASCADE;  
-- CREATE TABLE
CREATE TABLE IMATDATA.B_NSR_SCHMA
(
  NAME_STANDARD_RULE_ID VARCHAR2(50) NOT NULL,
  SYS_ID                VARCHAR2(12) NOT NULL,
  SCHMA_NM              VARCHAR2(255) NOT NULL,
  TYPE                  VARCHAR2(10) NOT NULL,
  LAST_UPDT_DT          DATE DEFAULT CURRENT_DATE,
  LAST_UPDT_USER_NM     VARCHAR2(60)
);

-- CREATE/RECREATE PRIMARY, UNIQUE AND FOREIGN KEY CONSTRAINTS 
ALTER TABLE IMATDATA.B_NSR_SCHMA
  ADD CONSTRAINT B_NSR_SCHMA_PK PRIMARY KEY (SYS_ID, SCHMA_NM, TYPE);
  
ALTER TABLE IMATDATA.B_NSR_SCHMA
  ADD CONSTRAINT B_NSR_SCHMA_FK FOREIGN KEY (NAME_STANDARD_RULE_ID)
  REFERENCES IMATDATA.B_NAME_STANDARD_RULE (NAME_STANDARD_RULE_ID) ON DELETE CASCADE;

-- CREATE/RECREATE INDEXES 
CREATE INDEX IMATDATA.B_NSR_SCHMA_INDEX ON IMATDATA.B_NSR_SCHMA (NAME_STANDARD_RULE_ID);
-- CREATE TABLE
CREATE TABLE IMATDATA.B_NSR_CWL
(
  NAME_STANDARD_RULE_ID VARCHAR2(50) NOT NULL,
  CLASS_WORD_LIST_ID    VARCHAR2(50) NOT NULL
);

-- CREATE/RECREATE PRIMARY, UNIQUE AND FOREIGN KEY CONSTRAINTS 
ALTER TABLE IMATDATA.B_NSR_CWL
  ADD CONSTRAINT B_NSR_CWL_PK PRIMARY KEY (NAME_STANDARD_RULE_ID, CLASS_WORD_LIST_ID);
  
ALTER TABLE IMATDATA.B_NSR_CWL
  ADD CONSTRAINT B_NSR_CWL_FK FOREIGN KEY (NAME_STANDARD_RULE_ID)
  REFERENCES IMATDATA.B_NAME_STANDARD_RULE (NAME_STANDARD_RULE_ID) ON DELETE CASCADE;

ALTER TABLE IMATDATA.B_NSR_CWL
  ADD CONSTRAINT B_NSR_CWL_FK2 FOREIGN KEY (CLASS_WORD_LIST_ID)
  REFERENCES IMATDATA.B_CLASS_WORD_LIST (CLASS_WORD_LIST_ID) ON DELETE CASCADE;  
-- CREATE TABLE
CREATE TABLE IMATDATA.B_NSR_PWL
(
  NAME_STANDARD_RULE_ID VARCHAR2(50) NOT NULL,
  PRIME_WORD_LIST_ID    VARCHAR2(50) NOT NULL
);

-- CREATE/RECREATE PRIMARY, UNIQUE AND FOREIGN KEY CONSTRAINTS 
ALTER TABLE IMATDATA.B_NSR_PWL
  ADD CONSTRAINT B_NSR_PWL_PK PRIMARY KEY (NAME_STANDARD_RULE_ID, PRIME_WORD_LIST_ID);
  
ALTER TABLE IMATDATA.B_NSR_PWL
  ADD CONSTRAINT B_NSR_PWL_FK FOREIGN KEY (NAME_STANDARD_RULE_ID)
  REFERENCES IMATDATA.B_NAME_STANDARD_RULE (NAME_STANDARD_RULE_ID) ON DELETE CASCADE;

ALTER TABLE IMATDATA.B_NSR_PWL
  ADD CONSTRAINT B_NSR_PWL_FK2 FOREIGN KEY (PRIME_WORD_LIST_ID)
  REFERENCES IMATDATA.B_PRIME_WORD_LIST (PRIME_WORD_LIST_ID) ON DELETE CASCADE;  
-- CREATE TABLE
CREATE TABLE IMATDATA.B_ADD_TBL
(
  SYS_ID   VARCHAR2(255),
  SCHMA_NM VARCHAR2(255),
  TBL_NM   VARCHAR2(255)
);


-- CREATE TABLE
CREATE TABLE IMATDATA.B_ADD_VW
(
  SYS_ID   VARCHAR2(255),
  SCHMA_NM VARCHAR2(255),
  VW_NM    VARCHAR2(255)
);
-- CREATE TABLE
CREATE TABLE IMATDATA.B_PARAM
(
  PARAM_ID    VARCHAR2(50) NOT NULL,
  PARAM_VALUE VARCHAR2(255) NOT NULL
);

-- CREATE/RECREATE PRIMARY, UNIQUE AND FOREIGN KEY CONSTRAINTS 
ALTER TABLE IMATDATA.B_PARAM
  ADD CONSTRAINT B_PARAM_PK PRIMARY KEY (PARAM_ID);
  

-- CREATE TABLE
CREATE TABLE IMATDATA.B_PROC
(
  PROC_ID VARCHAR2(12) NOT NULL,
  PROC_NM VARCHAR2(60)
);

-- CREATE/RECREATE PRIMARY, UNIQUE AND FOREIGN KEY CONSTRAINTS 
ALTER TABLE IMATDATA.B_PROC
  ADD CONSTRAINT B_PROC_PK PRIMARY KEY (PROC_ID);
  
  
-- CREATE TABLE
CREATE TABLE IMATDATA.L_PROC_EXEC
(
  PROC_EXEC_ID VARCHAR2(12) NOT NULL,
  PROC_ID      VARCHAR2(12) NOT NULL,
  STRT_DTT     DATE,
  END_DTT      DATE,
  STS_NM       VARCHAR2(60),
  USR_NM       VARCHAR2(60)
);

-- CREATE/RECREATE PRIMARY, UNIQUE AND FOREIGN KEY CONSTRAINTS 
ALTER TABLE IMATDATA.L_PROC_EXEC
  ADD CONSTRAINT L_PROC_EXEC_PK PRIMARY KEY (PROC_EXEC_ID);
  
ALTER TABLE IMATDATA.L_PROC_EXEC
  ADD CONSTRAINT L_PROC_EXEC_B_PROC_FK FOREIGN KEY (PROC_ID)
  REFERENCES IMATDATA.B_PROC (PROC_ID) ON DELETE CASCADE;
  
-- CREATE/RECREATE CHECK CONSTRAINTS 
ALTER TABLE IMATDATA.L_PROC_EXEC
  ADD CONSTRAINT L_PROC_EXEC_CK
  CHECK (STS_NM IN ('FAILED','RUNNING','SUCCESS'));  
-- CREATE TABLE
CREATE TABLE IMATDATA.L_PROC_ERR
(
  PROC_ERR_ID  VARCHAR2(12) NOT NULL,
  PROC_EXEC_ID VARCHAR2(12) NOT NULL,
  ERR_DESC     VARCHAR2(4000),
  ERR_DTT      DATE
);

-- CREATE/RECREATE PRIMARY, UNIQUE AND FOREIGN KEY CONSTRAINTS 
ALTER TABLE IMATDATA.L_PROC_ERR
  ADD CONSTRAINT L_PROC_ERR_PK PRIMARY KEY (PROC_EXEC_ID, PROC_ERR_ID);
  
ALTER TABLE IMATDATA.L_PROC_ERR
  ADD CONSTRAINT L_PROC_ERR_L_PROC_EXEC_FK FOREIGN KEY (PROC_EXEC_ID)
  REFERENCES IMATDATA.L_PROC_EXEC (PROC_EXEC_ID) ON DELETE CASCADE;  
-- Create table
create table IMATDATA.OBJECT_CURRENT_VERSION
(
  OBJ_ID         VARCHAR2(150),
  OBJ_TYPE       VARCHAR2(50),
  OBJ_NUM_VER    INTEGER,
  LAST_UPDT_DT   DATE,
  LAST_UPDT_USER VARCHAR2(60)
);
-- CREATE TABLE
CREATE TABLE IMATDATA.A_NAME_WRONG_FORMAT
(
  SYS_ID                VARCHAR2(12),
  SCHMA_NM              VARCHAR2(50),
  TYPE                  VARCHAR2(10),
  NAME_STANDARD_RULE_ID VARCHAR2(50),
  NAME                  VARCHAR2(255),
  DESCRIPTION           VARCHAR2(255),
  LAST_UPDT_DT          DATE DEFAULT CURRENT_DATE,
  VER_ID                NUMBER,
  FLAG_DNT_CARE         VARCHAR2(1) DEFAULT 'N',
  DSC_FLAG              VARCHAR2(500)
);
-- CREATE TABLE
CREATE TABLE IMATDATA.A_XPATH
(
  MAP_NM       VARCHAR2(255),
  DST_MAP_NM   VARCHAR2(255),
  SCHMA_NM     VARCHAR2(255),
  DST_SCHMA_NM VARCHAR2(255),
  OBJ_NM       VARCHAR2(255),
  DST_OBJ_NM   VARCHAR2(255),
  ENT_NM       VARCHAR2(255),
  DST_ENT_NM   VARCHAR2(255),
  XPATH_NM     VARCHAR2(4000),
  DST_XPATH_NM VARCHAR2(4000),
  FLD_NM       VARCHAR2(255),
  DST_FLD_NM   VARCHAR2(255),
  VER_ID       VARCHAR2(12)
);
-- CREATE TABLE
CREATE TABLE IMATDATA.A_XPATH_WSDL
(
  SRC_SYS_ID         VARCHAR2(255) NOT NULL,
  SRC_FLD_NM         VARCHAR2(255) NOT NULL,
  BASE_TYPE_NM       VARCHAR2(255),
  LEN_VAL            VARCHAR2(255),
  VER_ID             VARCHAR2(12) NOT NULL,
  LEVEL_VAL          NUMBER(8) NOT NULL,
  SRC_ROOT_NM        VARCHAR2(255) NOT NULL,
  CPLX_TYPE_NM       VARCHAR2(255),
  PARNT_SCHMA_NM     VARCHAR2(255),
  PARNT_CPLX_TYPE_NM VARCHAR2(255),
  SRC_URI_NM         VARCHAR2(255)
);

-- CREATE/RECREATE PRIMARY, UNIQUE AND FOREIGN KEY CONSTRAINTS 
ALTER TABLE IMATDATA.A_XPATH_WSDL
  ADD CONSTRAINT A_XPATH_WSDL_PK PRIMARY KEY (SRC_SYS_ID, SRC_FLD_NM, VER_ID, SRC_ROOT_NM, LEVEL_VAL);
-- Create table
create table IMATDATA.A_DAT_TYPE_CNV
(
  DAT_TYPE_NM_XSD VARCHAR2(30) not null,
  DAT_TYPE_NM_DB  VARCHAR2(30) not null
);
-- CREATE TABLE
CREATE TABLE IMATDATA.A_NAME_LST_VER
(
  SYS_ID   VARCHAR2(12),
  SCHMA_NM VARCHAR2(50),
  LST_VER  NUMBER
);
-- CREATE TABLE
CREATE TABLE IMATDATA.SQLN_EXPLAIN_PLAN
(
  STATEMENT_ID    VARCHAR2(30),
  TIMESTAMP       DATE,
  REMARKS         VARCHAR2(80),
  OPERATION       VARCHAR2(30),
  OPTIONS         VARCHAR2(30),
  OBJECT_NODE     VARCHAR2(128),
  OBJECT_OWNER    VARCHAR2(30),
  OBJECT_NAME     VARCHAR2(30),
  OBJECT_INSTANCE INTEGER,
  OBJECT_TYPE     VARCHAR2(30),
  OPTIMIZER       VARCHAR2(255),
  SEARCH_COLUMNS  INTEGER,
  ID              INTEGER,
  PARENT_ID       INTEGER,
  POSITION        INTEGER,
  COST            INTEGER,
  CARDINALITY     INTEGER,
  BYTES           INTEGER,
  OTHER_TAG       VARCHAR2(255),
  PARTITION_START VARCHAR2(255),
  PARTITION_STOP  VARCHAR2(255),
  PARTITION_ID    INTEGER,
  OTHER           LONG,
  DISTRIBUTION    VARCHAR2(30)
);

-- CREATE TABLE
CREATE TABLE IMATDATA.B_DMAIN_TYP
(
  SYS_ID              VARCHAR2(50) NOT NULL,
  DMAIN_TYP_NM        VARCHAR2(255) NOT NULL,
  DMAIN_TYP_CMNT_DESC VARCHAR2(4000),
  FXD_CD_FLG          VARCHAR2(1) NOT NULL,
  LAST_UPDT_USER_NM   VARCHAR2(60) NOT NULL,
  LAST_UPDT_DT        DATE DEFAULT CURRENT_DATE NOT NULL,
  DMAIN_USER_TYP_FLG  VARCHAR2(1),
  DMAIN_TECH_TYP_FLG  VARCHAR2(1),
  DMAIN_INTF_TYP_FLG  VARCHAR2(1)
);

-- CREATE/RECREATE PRIMARY, UNIQUE AND FOREIGN KEY CONSTRAINTS 
ALTER TABLE IMATDATA.B_DMAIN_TYP
  ADD CONSTRAINT B_DMAIN_TYP_PK PRIMARY KEY (SYS_ID, DMAIN_TYP_NM);
  
  ALTER TABLE IMATDATA.B_DMAIN_TYP
  ADD CONSTRAINT B_DMAIN_TYP_B_SYS_FK FOREIGN KEY (SYS_ID)
  REFERENCES IMATDATA.B_SYS (SYS_ID) ON DELETE CASCADE;
  
-- CREATE/RECREATE INDEXES 
CREATE INDEX IMATDATA.B_DMAIN_TYP__IDX ON IMATDATA.B_DMAIN_TYP (SYS_ID);  
-- CREATE TABLE
CREATE TABLE IMATDATA.B_DMAIN_CD
(
  SYS_ID             VARCHAR2(12) NOT NULL,
  DMAIN_TYP_NM       VARCHAR2(255) NOT NULL,
  DMAIN_CD_NM        VARCHAR2(255) NOT NULL,
  DMAIN_CD_CMNT_DESC VARCHAR2(4000),
  PARNT_DMAIN_TYP_NM VARCHAR2(255),
  PARNT_DMAIN_CD_NM  VARCHAR2(255),
  ALL_ORG_MAND_FLG   VARCHAR2(1) NOT NULL,
  FXD_VAL_FLG        VARCHAR2(1) NOT NULL,
  LAST_UPDT_USER_NM  VARCHAR2(60) NOT NULL,
  LAST_UPDT_DT       DATE DEFAULT CURRENT_DATE NOT NULL,
  SALES_ORG_ID       VARCHAR2(255) NOT NULL
);

ALTER TABLE IMATDATA.B_DMAIN_CD
  ADD CONSTRAINT B_DMAIN_CD_PK PRIMARY KEY (SYS_ID, DMAIN_TYP_NM, SALES_ORG_ID, DMAIN_CD_NM);
  
ALTER TABLE IMATDATA.B_DMAIN_CD
  ADD CONSTRAINT B_DMAIN_CD_B_DMAIN_TYP_FK FOREIGN KEY (SYS_ID, DMAIN_TYP_NM)
  REFERENCES IMATDATA.B_DMAIN_TYP (SYS_ID, DMAIN_TYP_NM);
  
ALTER TABLE IMATDATA.B_DMAIN_CD
  ADD CONSTRAINT B_DMAIN_CD_B_SALES_ORG_FK FOREIGN KEY (SALES_ORG_ID)
  REFERENCES IMATDATA.B_SALES_ORG (SALES_ORG_ID) ON DELETE CASCADE;
  
ALTER TABLE IMATDATA.B_DMAIN_CD
  ADD CONSTRAINT B_DMAIN_CD_PARENT FOREIGN KEY (SYS_ID, PARNT_DMAIN_TYP_NM, SALES_ORG_ID, PARNT_DMAIN_CD_NM)
  REFERENCES IMATDATA.B_DMAIN_CD (SYS_ID, DMAIN_TYP_NM, SALES_ORG_ID, DMAIN_CD_NM);  
  
-- CREATE/RECREATE INDEXES 
CREATE INDEX IMATDATA.B_DMAIN_CD__IDX ON IMATDATA.B_DMAIN_CD (SYS_ID);  
-- CREATE TABLE
CREATE TABLE IMATDATA.B_DMAIN_VAL
(
  SYS_ID              VARCHAR2(12) NOT NULL,
  DMAIN_TYP_NM        VARCHAR2(255) NOT NULL,
  DMAIN_CD_NM         VARCHAR2(255) NOT NULL,
  SALES_ORG_ID        VARCHAR2(255) NOT NULL,
  LNG_CD              VARCHAR2(12) NOT NULL,
  DMAIN_VAL_NM        VARCHAR2(255) NOT NULL,
  HIGH_VAL            VARCHAR2(255),
  LOW_VAL             VARCHAR2(255),
  TARGT_HIGH_VAL      VARCHAR2(255),
  ORD_BY_NBR          NUMBER(8),
  TARGT_LOW_VAL       VARCHAR2(255),
  TRANSL_FLG          VARCHAR2(1),
  LAST_UPDT_USER_NM   VARCHAR2(60) NOT NULL,
  LAST_UPDT_DT        DATE DEFAULT CURRENT_DATE NOT NULL,
  HID_FLG             VARCHAR2(1),
  STS_TYPE_NM         VARCHAR2(30) NOT NULL,
  DMAIN_VAL_CMNT_DESC VARCHAR2(4000),
  DMAIN_MBL_VAL_FLG   VARCHAR2(1)
);

-- CREATE/RECREATE PRIMARY, UNIQUE AND FOREIGN KEY CONSTRAINTS 
ALTER TABLE IMATDATA.B_DMAIN_VAL
  ADD CONSTRAINT B_DMAIN_VAL_PK PRIMARY KEY (SYS_ID, SALES_ORG_ID, DMAIN_TYP_NM, DMAIN_CD_NM, LNG_CD);
  
ALTER TABLE IMATDATA.B_DMAIN_VAL
  ADD CONSTRAINT B_DMAIN_VAL_B_DMAIN_TYP_FK FOREIGN KEY (SYS_ID, DMAIN_TYP_NM, SALES_ORG_ID, DMAIN_CD_NM)
  REFERENCES IMATDATA.B_DMAIN_CD (SYS_ID, DMAIN_TYP_NM, SALES_ORG_ID, DMAIN_CD_NM);

ALTER TABLE IMATDATA.B_DMAIN_VAL
  ADD CONSTRAINT B_DMAIN_VAL_B_DMAIN_TYP_FK1 FOREIGN KEY (SYS_ID, HIGH_VAL)
  REFERENCES IMATDATA.B_DMAIN_TYP (SYS_ID, DMAIN_TYP_NM)
  DISABLE;
  
ALTER TABLE IMATDATA.B_DMAIN_VAL
  ADD CONSTRAINT B_DMAIN_VAL_B_DMAIN_TYP_FK2 FOREIGN KEY (SYS_ID, LOW_VAL)
  REFERENCES IMATDATA.B_DMAIN_TYP (SYS_ID, DMAIN_TYP_NM)
  DISABLE;
  
ALTER TABLE IMATDATA.B_DMAIN_VAL
  ADD CONSTRAINT B_DMAIN_VAL_B_DMAIN_TYP_FK3 FOREIGN KEY (SYS_ID, TARGT_HIGH_VAL)
  REFERENCES IMATDATA.B_DMAIN_TYP (SYS_ID, DMAIN_TYP_NM)
  DISABLE;
  
ALTER TABLE IMATDATA.B_DMAIN_VAL
  ADD CONSTRAINT B_DMAIN_VAL_B_DMAIN_TYP_FK4 FOREIGN KEY (SYS_ID, TARGT_LOW_VAL)
  REFERENCES IMATDATA.B_DMAIN_TYP (SYS_ID, DMAIN_TYP_NM)
  DISABLE;
  
ALTER TABLE IMATDATA.B_DMAIN_VAL
  ADD CONSTRAINT B_DMAIN_VAL_B_LNG_FK FOREIGN KEY (LNG_CD)
  REFERENCES IMATDATA.B_LNG (LNG_CD) ON DELETE CASCADE;
  
-- Create/Recreate indexes 
create index IMATDATA.B_DMAIN_VAL__IDX on IMATDATA.B_DMAIN_VAL (SYS_ID, LNG_CD)  
-- CREATE TABLE
CREATE TABLE IMATDATA.B_INTF
(
  VER_ID            VARCHAR2(12) NOT NULL,
  INTF_ID           VARCHAR2(50) NOT NULL,
  LAST_VER_IND      VARCHAR2(1) NOT NULL,
  INTF_DESC         VARCHAR2(500),
  BUSNS_PROC_NM     VARCHAR2(255),
  EXT_LINK_ID       VARCHAR2(255),
  DOC_URL_VAL       VARCHAR2(255),
  SYS_ID            VARCHAR2(12) NOT NULL,
  SCHMA_NM          VARCHAR2(255) NOT NULL,
  LAST_UPDT_DT      DATE DEFAULT CURRENT_DATE NOT NULL,
  LAST_UPDT_USER_NM VARCHAR2(60) NOT NULL
);

-- CREATE/RECREATE PRIMARY, UNIQUE AND FOREIGN KEY CONSTRAINTS 
ALTER TABLE IMATDATA.B_INTF
  ADD CONSTRAINT B_INTF_PK PRIMARY KEY (VER_ID, INTF_ID);
  
-- CREATE/RECREATE INDEXES 
CREATE INDEX IMATDATA.B_INTF_INDEX ON IMATDATA.B_INTF (SYS_ID, SCHMA_NM);  
-- CREATE TABLE
CREATE TABLE IMATDATA.B_INTF_ATTRIB
(
  VER_ID            VARCHAR2(12) NOT NULL,
  INTF_ID           VARCHAR2(50) NOT NULL,
  ATTRIB_NM         VARCHAR2(60) NOT NULL,
  ATTRIB_VAL        VARCHAR2(1000) NOT NULL,
  LAST_UPDT_DT      DATE DEFAULT CURRENT_DATE NOT NULL,
  LAST_UPDT_USER_NM VARCHAR2(60) NOT NULL
);

-- CREATE/RECREATE PRIMARY, UNIQUE AND FOREIGN KEY CONSTRAINTS 
ALTER TABLE IMATDATA.B_INTF_ATTRIB
  ADD CONSTRAINT B_INTF_ATTRIB_PK PRIMARY KEY (VER_ID, INTF_ID, ATTRIB_NM);
  
ALTER TABLE IMATDATA.B_INTF_ATTRIB
  ADD CONSTRAINT B_INTF_ATTRIB_FK FOREIGN KEY (VER_ID, INTF_ID)
  REFERENCES IMATDATA.B_INTF (VER_ID, INTF_ID) ON DELETE CASCADE;

  
-- CREATE TABLE
CREATE TABLE IMATDATA.B_INTF_ENT
(
  INTF_VER_ID  VARCHAR2(12) NOT NULL,
  INTF_ID      VARCHAR2(50) NOT NULL,
  ENT_SYS_ID   VARCHAR2(12) NOT NULL,
  ENT_SCHMA_NM VARCHAR2(255) NOT NULL,
  ENT_NM       VARCHAR2(255) NOT NULL
);

-- CREATE/RECREATE PRIMARY, UNIQUE AND FOREIGN KEY CONSTRAINTS 
ALTER TABLE IMATDATA.B_INTF_ENT
  ADD CONSTRAINT B_INTF_ENT_PK PRIMARY KEY (INTF_VER_ID, INTF_ID, ENT_SYS_ID, ENT_SCHMA_NM, ENT_NM);
  
ALTER TABLE IMATDATA.B_INTF_ENT
  ADD CONSTRAINT B_INTF_ENT_FK FOREIGN KEY (INTF_VER_ID, INTF_ID)
  REFERENCES IMATDATA.B_INTF (VER_ID, INTF_ID) ON DELETE CASCADE;  
-- CREATE TABLE
CREATE TABLE IMATDATA.B_INTF_XMLNS
(
  INTF_ID        VARCHAR2(50) NOT NULL,
  INTF_VER_ID    VARCHAR2(12) NOT NULL,
  XMLNS_SYS_ID   VARCHAR2(15) NOT NULL,
  XMLNS_SCHMA_NM VARCHAR2(255) NOT NULL,
  XMLNS_NM       VARCHAR2(255) NOT NULL
);

-- CREATE/RECREATE PRIMARY, UNIQUE AND FOREIGN KEY CONSTRAINTS 
ALTER TABLE IMATDATA.B_INTF_XMLNS
  ADD CONSTRAINT B_INTF_XMLNS_PK PRIMARY KEY (INTF_ID, INTF_VER_ID, XMLNS_SYS_ID, XMLNS_SCHMA_NM, XMLNS_NM);
  
ALTER TABLE IMATDATA.B_INTF_XMLNS
  ADD CONSTRAINT B_INTF_XMLNS_FK FOREIGN KEY (INTF_VER_ID, INTF_ID)
  REFERENCES IMATDATA.B_INTF (VER_ID, INTF_ID) ON DELETE CASCADE;  
-- CREATE TABLE
CREATE TABLE IMATDATA.B_LOKP
(
  LOKP_ID           VARCHAR2(60) NOT NULL,
  FROM_SYS_ID       VARCHAR2(12) NOT NULL,
  TO_SYS_ID         VARCHAR2(12) NOT NULL,
  FROM_DMAIN_TYP_NM VARCHAR2(60),
  TO_DMAIN_TYP_NM   VARCHAR2(60),
  LAST_UPDT_DT      DATE DEFAULT CURRENT_DATE,
  LAST_UPDT_USER_NM VARCHAR2(60)
);

-- CREATE/RECREATE PRIMARY, UNIQUE AND FOREIGN KEY CONSTRAINTS 
ALTER TABLE IMATDATA.B_LOKP
  ADD CONSTRAINT B_LOKP_B_DMAIN_TYP_FK FOREIGN KEY (TO_SYS_ID, TO_DMAIN_TYP_NM)
  REFERENCES IMATDATA.B_DMAIN_TYP (SYS_ID, DMAIN_TYP_NM);

ALTER TABLE IMATDATA.B_LOKP
  ADD CONSTRAINT B_LOKP_B_DMAIN_TYP_FK1 FOREIGN KEY (FROM_SYS_ID, FROM_DMAIN_TYP_NM)
  REFERENCES IMATDATA.B_DMAIN_TYP (SYS_ID, DMAIN_TYP_NM);

ALTER TABLE IMATDATA.B_LOKP
  ADD CONSTRAINT B_LOKP_B_SYS_FK FOREIGN KEY (FROM_SYS_ID)
  REFERENCES IMATDATA.B_SYS (SYS_ID);

ALTER TABLE IMATDATA.B_LOKP
  ADD CONSTRAINT B_LOKP_B_SYS_FK1 FOREIGN KEY (TO_SYS_ID)
  REFERENCES IMATDATA.B_SYS (SYS_ID);
  
-- CREATE/RECREATE INDEXES 
CREATE UNIQUE INDEX IMATDATA.B_LOOKUP_PK ON IMATDATA.B_LOKP (LOKP_ID)  
-- CREATE TABLE
CREATE TABLE IMATDATA.B_LOKP_ELMNT
(
  LOKP_ID           VARCHAR2(60) NOT NULL,
  SCHMA_NM          VARCHAR2(255) NOT NULL,
  ELMNT_NM          VARCHAR2(255) NOT NULL,
  LAST_UPDT_DT      DATE DEFAULT CURRENT_DATE,
  LAST_UPDT_USER_NM VARCHAR2(60)
);

-- CREATE/RECREATE PRIMARY, UNIQUE AND FOREIGN KEY CONSTRAINTS 
ALTER TABLE IMATDATA.B_LOKP_ELMNT
  ADD CONSTRAINT B_LOKP_ELMNT_PK PRIMARY KEY (LOKP_ID, SCHMA_NM, ELMNT_NM);
  
  
-- CREATE TABLE
CREATE TABLE IMATDATA.B_LOKP_VAL
(
  LOKP_ID           VARCHAR2(60),
  FROM_VAL          VARCHAR2(255),
  TO_VAL            VARCHAR2(255),
  LAST_UPDT_DT      DATE DEFAULT CURRENT_DATE,
  LAST_UPDT_USER_NM VARCHAR2(60)
);


-- CREATE TABLE
CREATE TABLE IMATDATA.B_LOV_TYPE
(
  SYS_ID            VARCHAR2(12) NOT NULL,
  LOV_TYPE_NM       VARCHAR2(255) NOT NULL,
  IS_PROJ_RELAT     VARCHAR2(1),
  LOV_CMNT_DESC     VARCHAR2(4000),
  PARENT_TYPE_NM    VARCHAR2(255),
  MANDTRY_FLG       VARCHAR2(1) DEFAULT 'N',
  TECH_LOV_FLG      VARCHAR2(1),
  LAST_UPDT_USER_NM VARCHAR2(60),
  LAST_UPDT_DT      DATE DEFAULT CURRENT_DATE
);

-- CREATE/RECREATE PRIMARY, UNIQUE AND FOREIGN KEY CONSTRAINTS 
ALTER TABLE IMATDATA.B_LOV_TYPE
  ADD CONSTRAINT B_LOV_TYPE_PK PRIMARY KEY (SYS_ID, LOV_TYPE_NM);
  
ALTER TABLE IMATDATA.B_LOV_TYPE
  ADD CONSTRAINT B_LOV_TYPEB_SYS_FK FOREIGN KEY (SYS_ID)
  REFERENCES IMATDATA.B_SYS (SYS_ID) ON DELETE CASCADE;

-- CREATE/RECREATE CHECK CONSTRAINTS 
ALTER TABLE IMATDATA.B_LOV_TYPE
  ADD CONSTRAINT B_LOV_TYPE_MANDTRY_FLG_CK
  CHECK (MANDTRY_FLG IN ('Y', 'N'));

-- CREATE TABLE
CREATE TABLE IMATDATA.B_LOV
(
  SYS_ID            VARCHAR2(12) NOT NULL,
  LOV_TYPE_NM       VARCHAR2(255) NOT NULL,
  LOV_NM            VARCHAR2(255) NOT NULL,
  CMNT_DESC         VARCHAR2(4000),
  STS_IND           VARCHAR2(10) DEFAULT 'CANDIDATE' NOT NULL,
  MANDTRY_FLG       VARCHAR2(1) DEFAULT 'N' NOT NULL,
  DOMAIN_TYPE_NM    VARCHAR2(255),
  LAST_UPDT_DT      DATE DEFAULT CURRENT_DATE NOT NULL,
  LAST_UPDT_USER_NM VARCHAR2(60) NOT NULL
);

-- CREATE/RECREATE PRIMARY, UNIQUE AND FOREIGN KEY CONSTRAINTS 
ALTER TABLE IMATDATA.B_LOV
  ADD CONSTRAINT B_LIST_OF_VAL_PK PRIMARY KEY (SYS_ID, LOV_NM, LOV_TYPE_NM);
  
ALTER TABLE IMATDATA.B_LOV
  ADD CONSTRAINT B_LOVB_LOV_TYPE_FK FOREIGN KEY (SYS_ID, LOV_TYPE_NM)
  REFERENCES IMATDATA.B_LOV_TYPE (SYS_ID, LOV_TYPE_NM) ON DELETE CASCADE;

ALTER TABLE IMATDATA.B_LOV
  ADD CONSTRAINT B_LOV_B_LOV_TYPE_FK FOREIGN KEY (SYS_ID, DOMAIN_TYPE_NM)
  REFERENCES IMATDATA.B_LOV_TYPE (SYS_ID, LOV_TYPE_NM);  
  
-- CREATE/RECREATE CHECK CONSTRAINTS 
ALTER TABLE IMATDATA.B_LOV
  ADD CONSTRAINT B_LOV_STS_IND_CK
  CHECK (STS_IND IN ('CANDIDATE', 'ACCEPTED', 'REJECTED'));  
-- CREATE TABLE
CREATE TABLE IMATDATA.B_LOV_VAL
(
  SALES_ORG_ID      VARCHAR2(255) NOT NULL,
  SYS_ID            VARCHAR2(12) NOT NULL,
  LOV_TYPE_NM       VARCHAR2(255) NOT NULL,
  LOV_NM            VARCHAR2(255) NOT NULL,
  LOV_VAL           VARCHAR2(4000),
  HIGH_VAL          VARCHAR2(255),
  LOW_VAL           VARCHAR2(255),
  TARGET_HIGH_VAL   VARCHAR2(255),
  TARGET_LOW_VAL    VARCHAR2(255),
  ORD_BY_NBR        NUMBER(3),
  LAST_UPDT_USER_NM VARCHAR2(60) NOT NULL,
  LAST_UPDT_DT      DATE DEFAULT CURRENT_DATE NOT NULL
);

-- CREATE/RECREATE PRIMARY, UNIQUE AND FOREIGN KEY CONSTRAINTS 
ALTER TABLE IMATDATA.B_LOV_VAL
  ADD CONSTRAINT B_LOV_VAL_PK PRIMARY KEY (SYS_ID, SALES_ORG_ID, LOV_TYPE_NM, LOV_NM);
  
ALTER TABLE IMATDATA.B_LOV_VAL
  ADD CONSTRAINT B_LOV_VALB_LOV_FK FOREIGN KEY (SYS_ID, LOV_NM, LOV_TYPE_NM)
  REFERENCES IMATDATA.B_LOV (SYS_ID, LOV_NM, LOV_TYPE_NM) ON DELETE CASCADE;

ALTER TABLE IMATDATA.B_LOV_VAL
  ADD CONSTRAINT B_LOV_VAL_B_SALE_ORG_FK FOREIGN KEY (SALES_ORG_ID)
  REFERENCES IMATDATA.B_SALES_ORG (SALES_ORG_ID) ON DELETE CASCADE;  
  
