"""
this is tye type test module
we will test lots of possibilities
"""
# this is a comment
import chablau
import chablum
import xuxu, xaxa, xexeu

from tchick import *
from tchack import *

from xanadu import t1, t2, t3, t4
from xupan import abla, blebla, xiconico

from common import typeA as A, typeB as B
from commonBB import typeC as C, typeBlock as Block

type Inteiro int? min=20 "testando 123"
type txt String(50) default="143"

type chavevalor map(string, int) "chave valr"
type conjunto set(int):
	"""this is a set type
	usage may be scarce"""

type arr list(string) "list example"

type Percentual Decimal(12,5) "Percentual, 9999999.99999%"

type Dinheiro Decimal(19,2):
	"""Tipo Decimal que representa valor monetário com precisão de 19, e duas casas decimais"""

type Booltype BOOL default=true :
	"""blabla,
	bleble"""

type logtype int min=2 max=234


type floattype Float "float type"
type doubletype Double min=.43234234 max=10.32 "double type"
type ts timestamp
type tstz timestamptz

type ti time
type titz timetz

type kk int

type str string?(10,100) default="asdf":
	"""testando"""

type uuidtype UUID "uuid type"
# type bytetype Byte "byte type"

type datetype Date "date type"

type timetype Time "time type"

type datetimetype Timestamp:
	"""datetime type asdfadsf fdsdf"""


type inttypeO Int? "tipo inteiro"
type booltypeO Bool? "tipo booleano"
type logtypeO Long? "tipo inteiro longo"

type floattypeO Float? "float type"

type doubletypeO Double? "double type"

type uuidtypeO UUID? "uuid type"

type bytetypeO blob? "byte type"

type datetypeO Date? "date type"


type datetimetypeO Timestamp? :
	"""datetime 

	type"""


type timetypeO Time? "time type"
type Codigo String(2):
    """short string, usually a mnemonic, used as alternate key or primary
    key when referencial static data"""


type Nome String(80) "Nome Completo"

type lnae String

type variant [string, timestamp?] "variant type"


enum Suite:
	"""testing
	1234"""
	SPADES

	DIAMONDS
	CLUBS "Clubs suit"
	HEARTS "Hearts suit"


type CodigoO String?(2):
    """short string, usually a mnemonic, used as alternate key or primary
    key when
	referencial static data"""


niente.nada = "nothing at aall"
zero = 0
dot_one = 0.1
kaka.lala = false
symbol = """
	this is a symbol
	and it can be multiline"""

type cyclist map(string, timestamptz)
type times set(timestamp)


record Order:

	field1 Int
	field2 Timestamp:
		"""kkk
		asdfasdf"""
	*field3 String(80) "testing..."


	field4 String(2)

# # record Order2:

# # 	"""order record can
# # 	check later"""

# # 	field1 Int
# # 	field2 Timestamp:
# # 		"""kkk
# # 		asdfasdf"""
# # 	*field3 String(80) "testing..."
# # 	%qualif_o1


# # 	field4 String(2)

# # record Order3(xxx.Order1, order2("o2")):

# # 	"""order record can
# # 	check later"""

# # 	field1 Int
# # 	field2 Timestamp:
# # 		"""kkk
# # 		asdfasdf"""
# # 	* field3 String(80) "testing..."

# # 	field4 record Testing:
# # 		field_A Int "field A"
# # 		field_B Bool?
# # 		fielc_c enum possibilities:
# # 			Pol1
# # 			Pow2 "this is possibility 2"
# # 			Pos3

# enum Suite2:
# 	COPAS
# 	OUROS
# 	PAUS
# 	MAILHA

# # @order(a=2, b="234")
# # record map_example:

# # 	"""order record can
# # 	check later"""

# # 	field1 Int
# # 	field_2 map(string, int) "map testing"
# # 	!include dom.balab "inin"

